import{c as a}from"./app.74d6d5df.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const n={},t=a(`<p><a href="https://rocke.top/post/2021/12/09/stora-reactive-storage-lib/" target="_blank" rel="noopener noreferrer"><code>English Version</code></a> | <a href="https://rocke.top/post/2021/12/09/stora-reactive-storage-lib/" target="_blank" rel="noopener noreferrer"><code>\u4E2D\u6587\u7248\u672C</code></a></p><p>When I learning source code of vue.js, I found it has a reactive data, you can trigger something if you change the reactive data, like do some state manage. so I&#39;m wondering if python could do some interesting things like that.</p><p>Then I made Stora, means Storage and Reactive.</p><p><a href="https://github.com/louisyoungx/stora" target="_blank" rel="noopener noreferrer">GitHub - Stora: A simple, reactive local storage library</a></p><p>Stora allows you to save dict to local extremely easily. There\u2019s no need to manually open file and read, or save file after change your dict data \u2014 but nowadays, just editor the state, and Stora will automatically save for you!</p><p>You can use <code>pip install stora</code> to install Stora package from pypi.</p><p>Stora will save data as <code>state.json</code> in <strong>current working directory</strong>.</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> stora <span class="token keyword">import</span> stora
apple <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;size&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;small&quot;</span><span class="token punctuation">}</span>
s <span class="token operator">=</span> stora<span class="token punctuation">(</span>apple<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token comment"># {&quot;name&quot;: &quot;Apple&quot;, &quot;price&quot;: &quot;10&quot;, &quot;size&quot;: &quot;small&quot;}</span>
</code></pre></div><blockquote><p><strong>PS:</strong> <em>You can also decide the filename and filepath.</em></p><div class="language-python ext-py"><pre class="language-python"><code>s <span class="token operator">=</span> stora<span class="token punctuation">(</span>apple<span class="token punctuation">,</span> filename<span class="token operator">=</span><span class="token string">&#39;apple.json&#39;</span><span class="token punctuation">,</span> filepath<span class="token operator">=</span><span class="token string">&#39;~/.data/&#39;</span><span class="token punctuation">)</span>
</code></pre></div></blockquote><p>Now open <code>state.json</code>, you will see:</p><div class="language-json ext-json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Apple&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;small&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>If change the <code>s.state</code>, you will find <code>state.json</code> also changed!</p><div class="language-python ext-py"><pre class="language-python"><code>s<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Banana&quot;</span>
s<span class="token punctuation">.</span>state<span class="token punctuation">[</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;20&quot;</span>
</code></pre></div><p>Data in <code>state.json</code></p><div class="language-json ext-json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;small&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,15);function o(e,p){return t}var l=s(n,[["render",o]]);export{l as default};
