import{r as p,o,a as e,b as n,d as a,w as t,F as c,e as u,c as l}from"./app.39f154ca.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const k={},r=n("code",null,"English Version",-1),d=u(" | "),h=n("code",null,"\u4E2D\u6587\u7248\u672C",-1),g=l(`<p>\u672C\u6587\u5C06\u4EE5\u4E00\u4E2A\u8F7B\u91CF\u7EA7\u6E32\u67D3\u5668\u4E3A\u4F8B\uFF0C\u4ECB\u7ECDvue\u6E32\u67D3\u5668\u6A21\u5757\u539F\u7406\u3002</p><h1 id="\u6DF1\u5EA6\u89E3\u6790vue\u6E32\u67D3\u5668\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5EA6\u89E3\u6790vue\u6E32\u67D3\u5668\u6A21\u5757" aria-hidden="true">#</a> \u6DF1\u5EA6\u89E3\u6790Vue\u6E32\u67D3\u5668\u6A21\u5757</h1><p>\u672C\u6587\u5C06\u4EE5\u4E00\u4E2A\u8F7B\u91CF\u7EA7\u6E32\u67D3\u5668\u4E3A\u4F8B\uFF0C\u4ECB\u7ECDvue\u6E32\u67D3\u5668\u6A21\u5757\u539F\u7406\u3002</p><p>\u5728\u8FD9\u7BC7\u6587\u7AE0\uFF0C\u9996\u5148\u5C06\u4ECB\u7ECD <code>VDOM</code> \u4E0E\u5176\u7ED3\u6784\uFF0C\u7136\u540E\u89E3\u91CA\u5982\u4F55\u5C06 <code>VDOM</code> \u8F6C\u6362\u4E3A \u771F\u5B9E <code>DOM</code>\uFF0C\u63A5\u4E0B\u6765\u5C55\u793A<code>vue</code>\u5982\u4F55\u6839\u636E\u65B0\u65E7 <code>VDOM</code> \u6765\u4FEE\u8865 <code>DOM</code>\uFF0C\u6700\u540E\u672C\u6587\u4F8B\u4E3E\u4E86\u4F7F\u7528 <code>VDOM</code>\u7684\u4F18\u70B9\u3002</p><p>\u6E90\u4EE3\u7801\u4E0E\u5728\u7EBF\u6F14\u793A: <a href="https://codepen.io/louisyoungx/pen/yLzPGME" target="_blank" rel="noopener noreferrer">CodePen - Renderer Module of Vue.js</a></p><h2 id="\u4EC0\u4E48\u662F-vdom" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F-vdom" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F <code>VDOM</code>?</strong></h2><p><code>VDOM</code>\u662F\u6307Virtual DOM (\u865A\u62DFDOM)</p><p>\u8FD9\u662F\u4E2A\u771F\u6B63\u7684DOM</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello, world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>How are you<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u8FD9\u662F\u4E00\u4E2A\u4E0E\u8BE5DOM\u5BF9\u5E94\u7684\u865A\u62DFDOM</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token punctuation">{</span>
    tag<span class="token operator">:</span> <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
    props<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            tag<span class="token operator">:</span> <span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span>
            props<span class="token operator">:</span> <span class="token punctuation">{</span>
                id<span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token string">&#39;Hello, world!&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            tag<span class="token operator">:</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;How are you&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u90A3\u4E48vue\u5982\u4F55\u5C06\u8FD9\u4E2A <code>VDOM</code> \u8F6C\u5316\u4E3A\u4E00\u4E2A\u771F\u6B63\u7684 <code>DOM</code>\uFF1F</p><h2 id="vdom-\u7684\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#vdom-\u7684\u7ED3\u6784" aria-hidden="true">#</a> <strong><code>VDOM</code> \u7684\u7ED3\u6784</strong></h2><p>VDOM \u53EF\u4EE5\u7B80\u5355\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</p><blockquote><p>&#39;div&#39;</p></blockquote><p>VDOM \u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u6709\u4E09\u4E2A\u952E\u7684\u5BF9\u8C61\uFF1A</p><ul><li><code>tag</code>: String(required)</li><li><code>props</code>: Object | null</li><li><code>children</code>: List&lt;Object|String&gt;</li></ul><h3 id="tag" tabindex="-1"><a class="header-anchor" href="#tag" aria-hidden="true">#</a> <strong>Tag</strong></h3><p>Tag\u662F\u5FC5\u987B\u7684\uFF0CTag\u7684\u7C7B\u578B\u5E94\u8BE5\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</p><blockquote><p>tag: &#39;div&#39;</p></blockquote><h3 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> <strong>Props</strong></h3><p>Props \u6709\u4E24\u79CD\u60C5\u51B5</p><ul><li><p>\u7C7B\u578B\u662F Object</p><blockquote><p>props: { class: &#39;red&#39;,}</p></blockquote></li><li><p>\u4E0D\u5B58\u5728\uFF08\u4E3Anull\uFF09</p><blockquote><p>props: null</p></blockquote></li></ul><h3 id="children" tabindex="-1"><a class="header-anchor" href="#children" aria-hidden="true">#</a> <strong>Children</strong></h3><p>Children \u6709\u4E09\u79CD\u60C5\u51B5</p><ul><li><p>\u6BCF\u9879\u7C7B\u578B\u662F String</p><blockquote><p>children: &#39;Hello, world!&#39;</p></blockquote></li><li><p>\u6BCF\u9879\u7C7B\u578B\u662F Array</p><blockquote><p>children: [ &#39;Hello, world!&#39;, { \xA0 \xA0 tag: &#39;p&#39;, \xA0 \xA0 children: [&#39;How are you&#39;] }]</p></blockquote></li><li><p>\u4E0D\u5B58\u5728\uFF08\u4E3Anull\uFF09</p><blockquote><p>children: null</p></blockquote></li></ul><h2 id="\u5982\u4F55\u5C06-vdom-\u8F6C\u6362\u4E3A-\u771F\u5B9Edom" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5C06-vdom-\u8F6C\u6362\u4E3A-\u771F\u5B9Edom" aria-hidden="true">#</a> <strong>\u5982\u4F55\u5C06 <code>VDOM</code> \u8F6C\u6362\u4E3A <code>\u771F\u5B9EDOM</code> \uFF1F</strong></h2><p>\u6211\u4EEC\u9700\u8981\u6839\u636E\u4E4B\u524D\u7684\u8BA8\u8BBA\uFF0C\u5728\u4EE3\u7801\u4E2D\u5217\u4E3E\u6240\u6709\u53EF\u80FD\u7684\u60C5\u51B5\u3002</p><h3 id="vue-js-\u4E2D\u7684-vdom" tabindex="-1"><a class="header-anchor" href="#vue-js-\u4E2D\u7684-vdom" aria-hidden="true">#</a> <strong><code>Vue.js</code> \u4E2D\u7684 <code>VDOM</code></strong></h3><p>\u8FD9\u91CC\u6709\u4E00\u4E2Avue\u4E2D\u7684vdom</p><blockquote><p>\u26A0\uFE0F \u8BF7\u6CE8\u610F\u8FD9\u4E0D\u540C\u4E8E\u4E4B\u524D\u63D0\u5230\u7684VDOM\uFF0C\u8FD9\u91CC\u7684vnode\u5BF9\u8C61\u88ABh\u51FD\u6570\u5305\u88F9\u3002</p></blockquote><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> vdom <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>
    <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token comment">// tag</span>
    <span class="token punctuation">{</span> <span class="token comment">// props</span>
        <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&quot;red&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span> <span class="token comment">// children</span>
        <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;div one&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;div two&quot;</span><span class="token punctuation">,</span>
            <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;headline one&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u800C\u73B0\u5728\u7684 HTML body \u662F\u8FD9\u6837\u7684</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="\u4E3A\u4EC0\u4E48-vdom\u8282\u70B9-\u88AB\u5305\u88F9\u5728\u4E00\u4E2A-h-\u51FD\u6570\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-vdom\u8282\u70B9-\u88AB\u5305\u88F9\u5728\u4E00\u4E2A-h-\u51FD\u6570\u4E2D" aria-hidden="true">#</a> <strong>\u4E3A\u4EC0\u4E48 <code>vdom\u8282\u70B9</code> \u88AB\u5305\u88F9\u5728\u4E00\u4E2A <code>h</code> \u51FD\u6570\u4E2D\uFF1F</strong></h3><p><code>h</code>\u8868\u793A<code>Hyperscript</code>\uFF0C\u4EE3\u8868 <em>&quot;\u751F\u6210HTML\u7ED3\u6784\u7684\u811A\u672C&quot;</em> \u3002</p><p><code>h</code>\u51FD\u6570\u5C06\u5E2E\u52A9\u6211\u4EEC\u521B\u5EFA <code>VDOM</code> \u5BF9\u8C61\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u4E0D\u5FC5\u53CD\u590D\u5199 <code>tag</code> \u3001<code>props</code> \u3001 <code>children</code> \u7684\u952E\u540D\u3002</p><p><code>h</code>\u51FD\u6570\u7684\u7B80\u5355\u5B9E\u73B0</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> props<span class="token punctuation">,</span> children</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// if the tag or children is number, change them to string</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> tag <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tag <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> children <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        children <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        tag<span class="token punctuation">,</span>
        props<span class="token punctuation">,</span>
        children<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6302\u8F7D-vdom-\u5230\u76EE\u6807-dom" tabindex="-1"><a class="header-anchor" href="#\u6302\u8F7D-vdom-\u5230\u76EE\u6807-dom" aria-hidden="true">#</a> <strong>\u6302\u8F7D <code>VDOM</code> \u5230\u76EE\u6807 <code>DOM</code></strong></h3><p>\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u6839DOM\u8282\u70B9\u6765\u6302\u8F7D\u7531VDOM\u6784\u5EFA\u7684DOM\u8282\u70B9</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u9700\u8981\u4E00\u4E2A <code>mount</code> \u51FD\u6570\u6765\u5E2E\u52A9\u6211\u4EEC\u521B\u5EFA\u771F\u6B63\u7684DOM\u8282\u70B9\uFF0C\u5E76\u5C06\u5B83\u4EEC\u6302\u8F7D\u5230\u5BB9\u5668DOM\u8282\u70B9\u3002</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> element<span class="token punctuation">;</span>

    <span class="token comment">// is vnode a string</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        container<span class="token punctuation">.</span>textContent <span class="token operator">=</span> vnode<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// if not, create a real dom with value of vnode.tag</span>
        <span class="token comment">// and store the dom to the vnode object (keep for patch)</span>
        element <span class="token operator">=</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// is props exist</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// if exist, set attribute to the dom</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> attr <span class="token keyword">in</span> vnode<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> value <span class="token operator">=</span> vnode<span class="token punctuation">.</span>props<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// if the attr is function(start with &#39;on&#39;), add a event listener</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>attr<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;on&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>attr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                element<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// is children exist</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The value of children is string</span>
            element<span class="token punctuation">.</span>textContent <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The value of children is array</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> child <span class="token keyword">of</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Every item of children is a vnode, recurse them with mount function</span>
                <span class="token function">mount</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5728-vdom-\u66F4\u65B0\u65F6\u5BF9-dom-\u8FDB\u884C-patch\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5728-vdom-\u66F4\u65B0\u65F6\u5BF9-dom-\u8FDB\u884C-patch\u64CD\u4F5C" aria-hidden="true">#</a> <strong>\u5728 <code>VDOM</code> \u66F4\u65B0\u65F6\u5BF9 <code>DOM</code> \u8FDB\u884C <code>Patch</code>\u64CD\u4F5C</strong></h2><p>\u5C06\u65B0\u7684VDOM\u4E0E\u65E7\u7684VDOM\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5E76patch\u5904\u7406\u771F\u5B9E\u7684DOM\u3002</p><h3 id="\u6BD4\u8F83-tag" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83-tag" aria-hidden="true">#</a> <strong>\u6BD4\u8F83 tag</strong></h3><p>\u5982\u679C\u65B0\u7684DOM\u548C\u65E7\u7684DOM\u7684tag\u4E0D\u540C\uFF0C\u5C31\u66FF\u6362\u6574\u4E2ADOM\u8282\u70B9\u3002</p><h3 id="\u6BD4\u8F83-props" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83-props" aria-hidden="true">#</a> <strong>\u6BD4\u8F83 props</strong></h3><ul><li>\u627E\u51FA\u65B0\u6DFB\u52A0\u7684prop\uFF0C\u5E76\u5C06\u5176\u6DFB\u52A0\u5230DOM\u4E2D\u3002</li><li>find out the prop no longer exists, and remove it from the dom</li></ul><h3 id="\u6BD4\u8F83-children" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83-children" aria-hidden="true">#</a> <strong>\u6BD4\u8F83 children</strong></h3><p>\u65B0\u4E0E\u65E7VDOM\u7684children\u6709\u56DB\u79CD\u7C7B\u578B\u7EC4\u5408</p><p><a href="https://www.notion.so/1cf7876b8a5545d9b45148e0ac0b6294" target="_blank" rel="noopener noreferrer">Untitled</a></p><p>\u6211\u4EEC\u9700\u8981\u5904\u7406\u6240\u6709\u53EF\u80FD\u7684\u7EC4\u5408\u3002</p><h3 id="patch-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#patch-\u51FD\u6570" aria-hidden="true">#</a> <strong><code>patch</code> \u51FD\u6570</strong></h3><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">older<span class="token punctuation">,</span> newer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> element <span class="token operator">=</span> newer<span class="token punctuation">.</span>element <span class="token operator">=</span> older<span class="token punctuation">.</span>element<span class="token punctuation">;</span>

    <span class="token comment">// compare the tag</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>older<span class="token punctuation">.</span>tag <span class="token operator">!==</span> newer<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// update the old dom node</span>
        element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token function">mount</span><span class="token punctuation">(</span>newer<span class="token punctuation">,</span> element<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// compare the props</span>
    <span class="token keyword">const</span> oldProps <span class="token operator">=</span> older<span class="token punctuation">.</span>props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newProps <span class="token operator">=</span> newer<span class="token punctuation">.</span>props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> newProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// find out the newly added prop</span>
        oldValue <span class="token operator">=</span> oldProps<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        newValue <span class="token operator">=</span> newProps<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldValue <span class="token operator">!==</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// if the prop is changed in newer DOM or the prop is newly added</span>
            element<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> oldProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// find out the prop no longer exists</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>prop <span class="token keyword">in</span> newProps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// if the prop is not existed in the newer DOM</span>
            element<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// compare the children</span>
    <span class="token keyword">const</span> oldChildren <span class="token operator">=</span> older<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
    <span class="token keyword">const</span> newChildren <span class="token operator">=</span> newer<span class="token punctuation">.</span>children<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> newChildren <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> oldChildren <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// both new children and old children are string</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldChildren <span class="token operator">!==</span> newChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// they are not equal</span>
                element<span class="token punctuation">.</span>textContent <span class="token operator">=</span> newChildren<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// the new children is string but old children is array</span>
            element<span class="token punctuation">.</span>textContent <span class="token operator">=</span> newChildren<span class="token punctuation">;</span> <span class="token comment">// overwrite the DOM</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>newChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> oldChildren <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// the new children is array but old children is string</span>
            element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// reset this dom node</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> child <span class="token keyword">of</span> newChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">mount</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// recreate the dom nodes with the vnodes in new children</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// both new children and old children are array</span>
            <span class="token keyword">const</span> commonLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">,</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> commonLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Iterate the part that they all have</span>
                <span class="token function">patch</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newChildren<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// if the new children is longer, add the rest vdom node to the dom node</span>
                newChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">mount</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                oldChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>newChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    element<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u4F7F\u7528-vdom-\u7684\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-vdom-\u7684\u4F18\u70B9" aria-hidden="true">#</a> <strong>\u4F7F\u7528 <code>VDOM</code> \u7684\u4F18\u70B9</strong></h2><h3 id="\u4E3A\u4EC0\u4E48vue3\u4ECD\u7136\u4F7F\u7528vdom" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48vue3\u4ECD\u7136\u4F7F\u7528vdom" aria-hidden="true">#</a> <strong>\u4E3A\u4EC0\u4E48Vue3\u4ECD\u7136\u4F7F\u7528VDOM\uFF1F</strong></h3><p>vue3 \u5BF9patch\u51FD\u6570\u505A\u4E86\u5F88\u591A\u4F18\u5316\u3002 \u4E0E\u6211\u4EEC\u7684\u8F7B\u91CF\u7EA7\u6F14\u793A\u76F8\u6BD4\uFF0CVue3\u7528<code>v-for</code>\u6A21\u677F\u8BED\u6CD5\u4E2D\u7684<code>:key</code>\u5C5E\u6027\u6765\u4F18\u5316vnode\uFF08\u5BF9\u5E94\u6211\u4EEC\u7684patch\u51FD\u6570\u7684\u7B2C56\u81F371\u884C\uFF09</p><p>\u800C\u4E14Vue3\u5982\u679C\u6CA1\u5FC5\u8981\u7684\u8BDD\uFF0C\u53EF\u4EE5\u8DF3\u8FC7<code>props</code>\uFF0C<code>children</code>\u90E8\u5206\u3002\u540C\u65F6\u5757\u4F18\u5316\u57FA\u672C\u4E0A\u907F\u514D\u4E86\u5728\u5927\u591A\u6570\u8282\u70B9\u4E0A\u8C03\u7528\u8FD9\u90E8\u5206\u51FD\u6570\u3002</p><blockquote><p>Evan You: In reality, the update is so performant</p></blockquote><p>\u53E6\u4E00\u65B9\u9762\uFF0Cvdom\u8BA9\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528render\u51FD\u6570\u8BED\u6CD5\uFF0C\u8FD9\u6BD4\u6A21\u677F\u8BED\u6CD5\u66F4\u7075\u6D3B\uFF0C\u800C\u4E14\u8FD9\u4E2A\u80FD\u529B\u5BF9\u4E00\u4E9B\u5E93\u7684\u4F5C\u8005\u6765\u8BF4\u662F\u975E\u5E38\u91CD\u8981\u3002</p><p>\u6240\u4EE5Vue3\u51B3\u5B9A\u575A\u6301\u4F7F\u7528\u865A\u62DFDOM\uFF0C\u56E0\u4E3A\u5B83\u63D0\u4F9B\u4E86\u5F88\u591A\u597D\u5904\uFF0C\u540C\u65F6vue\u56E2\u961F\u8FD8\u5728\u52AA\u529B\u5229\u7528\u7F16\u8BD1\u5668\u4F7F\u5DEE\u5206\u5C3D\u53EF\u80FD\u7684\u9AD8\u6548\u3002</p><p>\u603B\u4E4B\uFF0C\u4E0E\u76F4\u63A5\u751F\u6210\u547D\u4EE4\u5F0FDOM\u64CD\u4F5C\u76F8\u6BD4\uFF0CVue\u63D0\u4F9B\u4E86\u76F8\u540C\u7EA7\u522B\u7684\u6027\u80FD\uFF0C\u540C\u65F6\u8FD8\u63D0\u4F9B\u4E86\u964D\u7EA7\u7684\u80FD\u529B\u6765\u4F7F\u7528\u66F4\u7075\u6D3B\u7684\u65B9\u5F0F\u8868\u8FBE\u903B\u8F91\u3002</p><blockquote><p>Evan You: The goal to have the best of both worlds is achieved in Vue3 that into a certain degree.</p></blockquote><h2 id="\u83B7\u53D6\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6E90\u7801" aria-hidden="true">#</a> <strong>\u83B7\u53D6\u6E90\u7801</strong></h2><p>\u6E90\u4EE3\u7801\u4E0E\u5728\u7EBF\u6F14\u793A:</p><p><a href="https://codepen.io/louisyoungx/pen/yLzPGME" target="_blank" rel="noopener noreferrer">CodePen - Renderer Module of Vue.js</a></p><blockquote><p>\u6240\u6709\u77E5\u8BC6\u70B9\u90FD\u662F\u63D0\u53D6\u81EA \u89C6\u9891 - \u5C24\u96E8\u6EAA\u6DF1\u5EA6\u89E3\u6790vue3, \u6240\u4EE5\u5982\u679C\u672C\u6587\u6709\u9519\u8BEF\u7684\u8BDD, \u90A3\u4E00\u5B9A\u662F\u5C24\u96E8\u6EAA\u7684\u9519 \u8BF7\u5728\u8BC4\u8BBA\u533A\u6307\u51FA\u3002</p></blockquote>`,69);function m(f,w){const s=p("RouterLink");return o(),e(c,null,[n("p",null,[a(s,{to:"/post/2021/12/26/renderer-module-of-vue/"},{default:t(()=>[r]),_:1}),d,a(s,{to:"/post/2021/12/27/renderer-module-of-vue/"},{default:t(()=>[h]),_:1})]),g],64)}var b=i(k,[["render",m]]);export{b as default};
