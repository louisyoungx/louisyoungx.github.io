(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{588:function(t,s,a){"use strict";a.r(s);var e=a(55),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("vim进阶操作与宏，crontab定时，自定义服务，环境变量，ssh配置文件，开机自启")]),t._v(" "),a("h2",{attrs:{id:"vim进阶操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim进阶操作"}},[t._v("#")]),t._v(" vim进阶操作")]),t._v(" "),a("h3",{attrs:{id:"用-vim-打开文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用-vim-打开文件"}},[t._v("#")]),t._v(" 用 VIM 打开文件")]),t._v(" "),a("h4",{attrs:{id:"如何用-vim-一次性打开多个文件呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何用-vim-一次性打开多个文件呢"}},[t._v("#")]),t._v(" 如何用 VIM 一次性打开多个文件呢？")]),t._v(" "),a("p",[t._v("现在有多个文件 file1 ，file2 , ... ,filen.")]),t._v(" "),a("p",[t._v("现在举例打开两个文件 file1，file2")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("vim file1 file2\n")])])]),a("p",[t._v("该方式打开文件，显示屏默认显示第一个文件也就是 file1，如何进行文件间的切换呢？")]),t._v(" "),a("blockquote",[a("p",[t._v("VIM 的正常模式下（参考上文关于正常模式的描述）按下键盘上的冒号 "),a("code",[t._v("：")]),t._v("这时会在显示屏底部出现冒号 "),a("code",[t._v("：")]),t._v("（进入了 VIM 的命令模式），然后在输入 ls ，屏幕上会出现打开的所有文件的序号和文件名，我们继续输入冒号 "),a("code",[t._v("：")]),t._v(" ，然后输入 bn (这里的 n需要做一个解释并不是键盘上的 n ,而是文件序号的代指，如 b1 代表显示屏上切换到第一个文件，b2 代表显示屏上切换到第二个文件)。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":ls\n")])])]),a("p",[t._v("上面这个命令将会列出 VIM 打开的所有文件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":b2\n")])])]),a("p",[t._v("上面的这个命令将会在显示屏上显示第二个文件。")]),t._v(" "),a("h3",{attrs:{id:"vim-的退出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的退出"}},[t._v("#")]),t._v(" VIM 的退出")]),t._v(" "),a("p",[t._v("强制保存但是不退出文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":w!\n")])])]),a("p",[t._v("退出所有的文件，对所有的文件修改都不做保存")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":qa!\n")])])]),a("p",[t._v("退出文件并保存对文件的修改")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":x\n")])])]),a("p",[t._v("打开另一个文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":e file\n")])])]),a("p",[t._v("放弃对文件的所有修改，恢复文件到上次保存的位置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":e!\n")])])]),a("p",[t._v("另存为 file")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":saveas file\n")])])]),a("p",[t._v("当打开多个文件的时候可以输入 "),a("code",[t._v(":bn")]),t._v(" 和 "),a("code",[t._v(":bp")]),t._v(" 进行上一个文件或者下一个文件的切换")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":bn` 和 `:bp\n")])])]),a("h3",{attrs:{id:"vim-的输入模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的输入模式"}},[t._v("#")]),t._v(" VIM 的输入模式")]),t._v(" "),a("h4",{attrs:{id:"vim-的代码提示功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的代码提示功能"}},[t._v("#")]),t._v(" VIM 的代码提示功能")]),t._v(" "),a("p",[t._v("在编辑模式下 ，快捷键 Ctrl+n 或者 Ctrl+p 会有代码提示功能，我们可以实现快速录入的效果。")]),t._v(" "),a("h3",{attrs:{id:"vim-的命令模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的命令模式"}},[t._v("#")]),t._v(" VIM 的命令模式")]),t._v(" "),a("h4",{attrs:{id:"vim-处理大小写的区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-处理大小写的区分"}},[t._v("#")]),t._v(" VIM 处理大小写的区分")]),t._v(" "),a("p",[t._v("编辑器将不会区分大小写，如果你进行该设置之后，进行关键字查询如 /target 如果文本中有 target ,Target,....,只要是字符相同不会区分大小写都会进行匹配")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":set ic\n")])])]),a("p",[t._v("该命令用来区分大小写的查询")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":set noic\n")])])]),a("h4",{attrs:{id:"vim-删除多行文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-删除多行文本"}},[t._v("#")]),t._v(" VIM 删除多行文本")]),t._v(" "),a("p",[t._v("n1 和 n2 指的是起始行号和结束行号，d 是删除关键字")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":n1,n2d\n")])])]),a("h4",{attrs:{id:"vim-处理文本的替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-处理文本的替换"}},[t._v("#")]),t._v(" VIM 处理文本的替换")]),t._v(" "),a("p",[t._v("作用范围分为当前行、全文、选区等等")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":{作用范围}s/{目标}/{替换}/{替换的标志}\n")])])]),a("p",[t._v("将会把当前光标所在行的 target 替换成 handsome")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":s/target/handsome/g\n")])])]),a("p",[t._v("将会把全文中的 target 替换成 handsome")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":%s/target/handsome/g\n")])])]),a("p",[t._v("这里的 n1 和 n2 值得是行号，将会替换掉 n1 到 n2 的所有 target 为 handsome")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":n1,n2s/target/handsome/g\n")])])]),a("p",[t._v("选区，在可视模式下选择区域后输入"),a("code",[t._v(":")]),t._v("，VIM 会自动补全为 "),a("code",[t._v(":'<,'>")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":'<,'>s/target/handsome/g\n")])])]),a("blockquote",[a("p",[t._v("这个操作咋一看起来有点懵逼，这个操作是可视模式 (Visual-mode) 下选区中的替换操作（可视模式下文会谈到），可视模式下输入"),a("code",[t._v("：")]),t._v("会自动补全 "),a("code",[t._v(":'<,'>")]),t._v(" 这个是可视范围下的操作范围，类似于 % 和 n1,n2，代表操作的文本范围，上面的例子就是替换掉可视区域的 target 为 handsome。")])]),t._v(" "),a("p",[t._v("下面来谈谈替换的标志。")]),t._v(" "),a("p",[t._v("上文中命令结尾的 "),a("code",[t._v("g")]),t._v("即是替换标志之一，表示全局 "),a("code",[t._v("global")]),t._v("替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：")]),t._v(" "),a("p",[t._v("空替换标志表示只替换从光标位置开始，目标的第一次出现")]),t._v(" "),a("p",[t._v("作用于当前行，从光标处开始查找替换，仅仅替换第一次匹配 target 的地方为handsome 。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":s/target/handsome\n")])])]),a("p",[t._v("替换掉文件中所有行第一次出现 target 的地方为 handsome 。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":%s/target/handsome\n")])])]),a("p",[t._v("i 表示大小写不敏感查找，I 表示大小写敏感：")]),t._v(" "),a("p",[t._v("替换掉所有行第一个出现 target (不区分大小写) 为 handsome 。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":%s/target/handsome/i\n")])])]),a("p",[t._v("替换掉所有行出现 target (不区分大小写) 为 handsome 。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":%s/target/handsome/gi\n")])])]),a("p",[t._v('c 表示需要确认，例如全局查找"target"替换为"handsome"并且需要确认：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":%s/target/handsome/gc\n")])])]),a("h4",{attrs:{id:"vim-执行-linux-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-执行-linux-命令"}},[t._v("#")]),t._v(" VIM 执行 Linux 命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":!command\n")])])]),a("p",[a("code",[t._v(":")]),t._v(" 后面紧跟着 "),a("code",[t._v("!")]),t._v(" ，"),a("code",[t._v("!")]),t._v(" 后面紧跟着 linux 命令（ command 指操作 Linux 系统的一系列命令，如创建文件，新建文件夹，查询文件的属性的等），例子如下，")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":!date\n")])])]),a("p",[t._v("执行 date 命令显示时间，执行完命令以后按下键盘上的 Enter 就会返回到文件。")]),t._v(" "),a("h4",{attrs:{id:"vim-执行命令-并且添加结果至操作文本光标处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-执行命令-并且添加结果至操作文本光标处"}},[t._v("#")]),t._v(" VIM 执行命令，并且添加结果至操作文本光标处")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":r !command\n")])])]),a("p",[t._v(": 后面紧跟着 r , r 后面是空格，紧接着是 !command( command 解释同上)，例子如下，")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":r !date \n")])])]),a("p",[t._v("执行 date 命令显示时间，并且添加命令结果到文本中。")]),t._v(" "),a("h4",{attrs:{id:"定义快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义快捷键"}},[t._v("#")]),t._v(" 定义快捷键")]),t._v(" "),a("p",[t._v("下面举例说明：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":map ^M I#<ESC>\n")])])]),a("p",[t._v("上面的例子也就是通过快捷键 "),a("code",[t._v("Ctrl + m")]),t._v(" 在文件光标处所在行的行首插入 # （ # 代表注释）。")]),t._v(" "),a("p",[a("code",[t._v(":")]),t._v(" 后面的 map 是关键字 ，后面是 key 和 value 。")]),t._v(" "),a("p",[t._v("key 对应的是 ^M ， 这个 key 需要强调一下 ^M 是 Ctrl + v + m 打出来的（按下这三个键，VIM 会显示成 ^M ）,^M 代表快捷键是"),a("code",[t._v("Ctrl + m")]),t._v(" , Ctrl + v + n 就是 ^N ,代表快捷键是 Ctrl + n 。Ctrl + v + x 就是 ^X (这里的 x 是代表 26 个字母中的任意一个) 代表快捷键 "),a("code",[t._v("Ctrl + x")]),t._v("。")]),t._v(" "),a("p",[t._v("value 对应的是 "),a("code",[t._v("I#<ESC>")]),t._v(",表示按下快捷键以后执行的相应操作，"),a("code",[t._v("I")]),t._v(" 是切换光标至行首并切换到编辑模式，"),a("code",[t._v("#")]),t._v("是行首输入的内容（ # 是VIM 文件中的注释符号 ），"),a("code",[t._v("<ESC>")]),t._v(" 是退出编辑模式。")]),t._v(" "),a("p",[t._v("举例如下：")]),t._v(" "),a("p",[a("code",[t._v(":map ^D Ahelloworld<ESC>")]),t._v("表示在文件的光标所在行的行尾，添加 helloworld 字符串，按住组合键 ctrl + d 就会执行操作。")]),t._v(" "),a("h3",{attrs:{id:"vim-的正常模式-normal-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的正常模式-normal-model"}},[t._v("#")]),t._v(" VIM 的正常模式（Normal-model）")]),t._v(" "),a("h4",{attrs:{id:"大小写转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大小写转换"}},[t._v("#")]),t._v(" 大小写转换")]),t._v(" "),a("ul",[a("li",[t._v("~ 将光标下的字母改变大小写")]),t._v(" "),a("li",[t._v("3~ 将光标位置开始的3个字母改变其大小写")]),t._v(" "),a("li",[t._v("g~~ 改变当前行字母的大小写")]),t._v(" "),a("li",[t._v("gUU 将当前行的字母改成大写")]),t._v(" "),a("li",[t._v("guu 将当前行的字母全改成小写")]),t._v(" "),a("li",[t._v("3gUU 将从光标开始到下面3行字母改成大写")]),t._v(" "),a("li",[t._v("gUw 将光标下的单词改成大写。")]),t._v(" "),a("li",[t._v("guw 将光标下的单词改成小写")])]),t._v(" "),a("h4",{attrs:{id:"vim-的重复命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的重复命令"}},[t._v("#")]),t._v(" VIM 的重复命令")]),t._v(" "),a("p",[t._v(". 该命令是重复上一个操作的命令\n"),a("code",[t._v("n<command>")]),t._v("重复某个命令 n 次，\n如 10p复制 10 次，10dd 删除十次。")]),t._v(" "),a("h3",{attrs:{id:"vim-可视化模式-visual-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-可视化模式-visual-mode"}},[t._v("#")]),t._v(" VIM 可视化模式（Visual-mode)")]),t._v(" "),a("h4",{attrs:{id:"可视化模式下-v-的特殊操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可视化模式下-v-的特殊操作"}},[t._v("#")]),t._v(" 可视化模式下 v 的特殊操作")]),t._v(" "),a("p",[t._v('当操作的文本光标在 “”，‘’ ，（），{} ，[（双引号，单引号，小括号，大括号，中括号）\n当中的时候,可以通过 va"选中 ”“ 内的所有内容包括双引号 ，vi" 选中 "" 内的所有内容，不包括 ""。va,vi 会快速选择区域，va 后面会紧跟一个区域结束标志，a 会选中结束符标志，i 就不会。例子如下：')]),t._v(" "),a("p",[t._v('"hello world [VI'),a("strong",[t._v("M")]),t._v(' is so strong],{we all can master vim skill}"')]),t._v(" "),a("p",[t._v("假设当前光标定位在上面的文本 M 处：\nva] 操作将会选中以下文本（加粗部分）：\n“hello world***[VIM is so strong]***,{we all can master vim skill}“\nvi] 操作将会选中如下的区域，没有包含 []：\n“hello world [*"),a("strong",[t._v("VIM is so strong*")]),t._v("],{we all can master vim skill}“")]),t._v(" "),a("h4",{attrs:{id:"块区域下的特殊操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块区域下的特殊操作"}},[t._v("#")]),t._v(" 块区域下的特殊操作")]),t._v(" "),a("p",[t._v("Ctrl+v 选中块区域以后，按下大写的 I 或者 A 可以在区域的前面或者后面输入内容，按下 jj 或者 "),a("code",[t._v("<ESC>")]),t._v(",可以看到选中的区域前面或者后面会有输入的内容。")]),t._v(" "),a("h2",{attrs:{id:"crontab-定时任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crontab-定时任务"}},[t._v("#")]),t._v(" crontab 定时任务")]),t._v(" "),a("h3",{attrs:{id:"任务调度概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务调度概念"}},[t._v("#")]),t._v(" 任务调度概念")]),t._v(" "),a("p",[t._v("系统在某个时间执行的特定的命令或程序。")]),t._v(" "),a("ul",[a("li",[t._v("系统工作：有些重要的工作必须周而复始地执行。如病毒扫描等；")]),t._v(" "),a("li",[t._v("个别用户工作：个别用户可能希望执行某些程序，比如对 mysql 数据库的备份。")])]),t._v(" "),a("h3",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("h4",{attrs:{id:"快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速入门"}},[t._v("#")]),t._v(" 快速入门")]),t._v(" "),a("h5",{attrs:{id:"任务要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务要求"}},[t._v("#")]),t._v(" 任务要求")]),t._v(" "),a("p",[t._v("每一分钟自动调用 ls -l /etc >> /tmp/to.txt")]),t._v(" "),a("h5",{attrs:{id:"操作步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作步骤"}},[t._v("#")]),t._v(" 操作步骤")]),t._v(" "),a("ul",[a("li",[t._v("执行 crontab -e 命令")]),t._v(" "),a("li",[t._v("接着输入自动调度命令到调度文件（/etc/crontab），即 */1 * * * * ls –l /etc/ >> /tmp/to.txt")]),t._v(" "),a("li",[t._v("保存退出调度文件")])]),t._v(" "),a("h4",{attrs:{id:"_5个占位符说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5个占位符说明"}},[t._v("#")]),t._v(" 5个占位符说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("占位符")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("第一个*")]),t._v(" "),a("td",[t._v("一小时中的第几分钟")]),t._v(" "),a("td",[t._v("0-59")])]),t._v(" "),a("tr",[a("td",[t._v("第二个*")]),t._v(" "),a("td",[t._v("一天中的第几小时")]),t._v(" "),a("td",[t._v("0-23")])]),t._v(" "),a("tr",[a("td",[t._v("第三个*")]),t._v(" "),a("td",[t._v("一月中的第几天")]),t._v(" "),a("td",[t._v("1-31")])]),t._v(" "),a("tr",[a("td",[t._v("第四个*")]),t._v(" "),a("td",[t._v("一年中的第几月")]),t._v(" "),a("td",[t._v("1-12")])]),t._v(" "),a("tr",[a("td",[t._v("第五个*")]),t._v(" "),a("td",[t._v("一周中的星期几")]),t._v(" "),a("td",[t._v("0-7（0和7都代表星期日）")])])])]),t._v(" "),a("h4",{attrs:{id:"特殊符号说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊符号说明"}},[t._v("#")]),t._v(" 特殊符号说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("特殊符号")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("代表任何时间。比如第一个*就代表一小时中每分钟都执行一次的意思。")])]),t._v(" "),a("tr",[a("td",[t._v(",")]),t._v(" "),a("td",[t._v("代表不连续的时间。比如"),a("code",[t._v("0 8,12,16 * * *")]),t._v("命令代表每天的8点0分，12点0分，16点0分都执行一次命令。")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("代表连续的时间范围。比如"),a("code",[t._v("0 5 * * 1-6")]),t._v("命令代表在周一到周六的凌晨5点0分执行命令。")])]),t._v(" "),a("tr",[a("td",[t._v("_")]),t._v(" "),a("td",[t._v("代表每隔多久执行一次。比如"),a("code",[t._v("_ /10 * * * *")]),t._v("命令代表每隔10分钟就执行一次命令。")])])])]),t._v(" "),a("h4",{attrs:{id:"特定时间执行任务案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特定时间执行任务案例"}},[t._v("#")]),t._v(" 特定时间执行任务案例")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("特定时间")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("45 22 * * *")])]),t._v(" "),a("td",[t._v("在每天22点45分执行命令。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("0 17 * * 1")])]),t._v(" "),a("td",[t._v("每周一的17点0分执行命令。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("0 5 1,15 * *")])]),t._v(" "),a("td",[t._v("每月1号和15号的凌晨5点0分执行命令。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("40 4 * * 1-5")])]),t._v(" "),a("td",[t._v("每周一到周五的凌晨4点40分执行命令。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*/10 4 * * *")])]),t._v(" "),a("td",[t._v("每天的凌晨4点，每隔10分钟执行一次命令。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("0 0 1,15 * 1")])]),t._v(" "),a("td",[t._v("每月1号和15号，每周一的0点0分都会执行命令。注意：星期几和几号最好不要同时出现，因为定义的都是天，容易让管理员混乱。")])])])]),t._v(" "),a("h4",{attrs:{id:"crontab-任务调度实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crontab-任务调度实例"}},[t._v("#")]),t._v(" crontab 任务调度实例")]),t._v(" "),a("ol",[a("li",[t._v("每隔1分钟，将当前日期和日历都追加到 "),a("code",[t._v("/home/mycal")]),t._v(" 文件中。")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("vim /home/my.sh")]),t._v(" 写入内容 "),a("code",[t._v("date >> /home/mycal")]),t._v(" 和 "),a("code",[t._v("cal >> /home/mycal")])]),t._v(" "),a("li",[t._v("给 "),a("code",[t._v("my.sh")]),t._v(" 增加执行权限，"),a("code",[t._v("chmod u+x /home/my.sh")])]),t._v(" "),a("li",[t._v("执行 "),a("code",[t._v("crontab -e")]),t._v(" 命令，增加 "),a("code",[t._v("*/1 * * * * /home/my.sh")])]),t._v(" "),a("li",[t._v("保存退出调度文件")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("每天凌晨2:00，将 mysql 数据库 testdb，备份到文件 mydb.bak 中。提示指令："),a("code",[t._v("mysqldump -u root -p 密码 数据库 > /home/mydb.bak")])])]),t._v(" "),a("ul",[a("li",[t._v("执行 "),a("code",[t._v("crontab -e")]),t._v(" 命令")]),t._v(" "),a("li",[t._v("增加 "),a("code",[t._v("0 2 * * * mysqldump -u root -proot testdb > /home/mydb.bak")])]),t._v(" "),a("li",[t._v("保存退出调度文件")])]),t._v(" "),a("h4",{attrs:{id:"crontab-常用选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crontab-常用选项"}},[t._v("#")]),t._v(" crontab 常用选项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("选项")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-e")]),t._v(" "),a("td",[t._v("编辑 crontab 定时任务")])]),t._v(" "),a("tr",[a("td",[t._v("-l")]),t._v(" "),a("td",[t._v("查询 crontab 任务")])]),t._v(" "),a("tr",[a("td",[t._v("-r")]),t._v(" "),a("td",[t._v("删除当前用户所有 crontab 任务")])])])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("crontab -r: 终止任务调度。")]),t._v(" "),a("li",[t._v("crontab –l：列出当前所有任务调度。")]),t._v(" "),a("li",[t._v("service crontab restart：重启任务调度。")])])]),t._v(" "),a("h2",{attrs:{id:"服务管理-service-systemctl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务管理-service-systemctl"}},[t._v("#")]),t._v(" 服务管理（service / systemctl）")]),t._v(" "),a("p",[t._v("服务本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其它程序的请求，比如 (mysql、sshd、防火墙等)，因此又称为守护进程")]),t._v(" "),a("h3",{attrs:{id:"service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[t._v("#")]),t._v(" service")]),t._v(" "),a("p",[a("code",[t._v("service")]),t._v("命令用于管理"),a("code",[t._v("Linux")]),t._v("操作系统中服务的命令。")]),t._v(" "),a("p",[t._v("这个命令不是在所有的"),a("code",[t._v("linux")]),t._v("发行版本中都有。主要是在"),a("code",[t._v("redhat")]),t._v("、"),a("code",[t._v("fedora")]),t._v("、"),a("code",[t._v("mandriva")]),t._v("和"),a("code",[t._v("centos")]),t._v("中。")]),t._v(" "),a("p",[t._v("service 服务名 [start | stop | restart | reload | status]")]),t._v(" "),a("blockquote",[a("p",[t._v("在 CentOS 7.0 后 不再使用 service ,而是 systemctl（后面专门介绍）。")])]),t._v(" "),a("p",[t._v("service 指令管理的服务在 /etc/init.d 查看，即 ls -l /etc/init.d 命令。")]),t._v(" "),a("h4",{attrs:{id:"service-基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-基本语法"}},[t._v("#")]),t._v(" service 基本语法")]),t._v(" "),a("p",[t._v("service 服务名 [start | stop | restart | reload | status]")]),t._v(" "),a("p",[t._v("service 管理指令示例")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有服务当前的运行状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" --status-all\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定服务（vsftpd）的运行状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" vsftpd status\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止指定服务（vsftpd）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" vsftpd stop\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动指定服务（vsftpd）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" vsftpd start\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启网络服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" network restart\n")])])]),a("h4",{attrs:{id:"服务的运行级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务的运行级别"}},[t._v("#")]),t._v(" 服务的运行级别")]),t._v(" "),a("p",[t._v("Linux 系统有7种运行级别（runlevel）：常用的是级别3和5。")]),t._v(" "),a("ul",[a("li",[t._v("运行级别 0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动。")]),t._v(" "),a("li",[t._v("运行级别 1：单用户工作状态，root 权限，用于系统维护，禁止远程登陆。")]),t._v(" "),a("li",[t._v("运行级别 2：多用户状态(没有 NFS)，不支持网络。")]),t._v(" "),a("li",[t._v("运行级别 3：完全的多用户状态(有 NFS)，登陆后进入控制台命令行模式。")]),t._v(" "),a("li",[t._v("运行级别 4：系统未使用，保留。")]),t._v(" "),a("li",[t._v("运行级别 5：X11 控制台，登陆后进入图形 GUI 模式")]),t._v(" "),a("li",[t._v("运行级别 6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动。")])]),t._v(" "),a("p",[t._v("CentOS 7后运行级别说明")]),t._v(" "),a("ul",[a("li",[t._v("在 /etc/initab 进行了简化，multi-user.target 等同于运行级别3，graphical.target\n等同于运行级别5。")]),t._v(" "),a("li",[t._v("systemctl get-default：获取当前的运行级别；")]),t._v(" "),a("li",[t._v("systemctl set-default multi-user.target：将默认运行级别设置为 mulit-user。")])]),t._v(" "),a("h3",{attrs:{id:"chkconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chkconfig"}},[t._v("#")]),t._v(" chkconfig")]),t._v(" "),a("p",[a("code",[t._v("chkconfig")]),t._v("实用程序是一个命令行工具。")]),t._v(" "),a("p",[t._v("在指定运行级别下启动所选服务，以及列出所有可用服务及其当前设置。")]),t._v(" "),a("p",[t._v("从启动中启用或禁用服务。（需要sudo权限）")]),t._v(" "),a("p",[t._v("所有的服务脚本位于"),a("code",[t._v("/etc/init.d")]),t._v("文件中，可通过"),a("code",[t._v("ls -l /etc/init.d")]),t._v("查看。")]),t._v(" "),a("p",[a("code",[t._v("chkconfig")]),t._v(" 重新设置服务自启动或关闭后，需要重启机器才能生效。")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：CentOS 7.0之后，很多服务使用 systemctl 管理。")])]),t._v(" "),a("h4",{attrs:{id:"基本语法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-2"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("ul",[a("li",[t._v("chkconfig --list | grep 服务名")]),t._v(" "),a("li",[t._v("chkconfig 服务名 --list")]),t._v(" "),a("li",[t._v("chkconfig --level 5 服务名 on/off")])]),t._v(" "),a("h4",{attrs:{id:"应用实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用实例"}},[t._v("#")]),t._v(" 应用实例")]),t._v(" "),a("ul",[a("li",[t._v("将 sshd 服务在运行级别5下设置为不自动启动：chkconfig --level 5 sshd off")]),t._v(" "),a("li",[t._v("显示当前系统所有服务的各个运行级别的运行状态：chkconfig --list")]),t._v(" "),a("li",[t._v("将 network 服务在运行级别3下设置为不自动启动：chkconfig --level 3 network off")])]),t._v(" "),a("h3",{attrs:{id:"systemctl-管理指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#systemctl-管理指令"}},[t._v("#")]),t._v(" systemctl 管理指令")]),t._v(" "),a("h4",{attrs:{id:"基本语法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-3"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("systemctl [start | stop | restart | status] 服务名")])]),t._v(" "),a("li",[a("p",[t._v("service 指令管理的服务在 /usr/lib/systemd/system 查看，即 ls -l\n/usr/lib/systemd/system 命令。")])]),t._v(" "),a("li",[a("p",[t._v("systemctl 设置服务自启动状态")]),t._v(" "),a("ul",[a("li",[t._v("systemctl list-unit-files| grep 服务名：查看服务开机启动状态，使用 grep 进行过滤。")]),t._v(" "),a("li",[t._v("systemctl enable 服务名：设置服务开机自启动。")]),t._v(" "),a("li",[t._v("systemctl disenable 服务名：关闭服务开机自启动。")]),t._v(" "),a("li",[t._v("systemctl is-enable 服务名：查询某个服务是否开机自启动。")])])]),t._v(" "),a("li",[a("p",[t._v("查看服务名")]),t._v(" "),a("ul",[a("li",[t._v("使用 ls -l /usr/lib/systemd/system 命令查看需要的服务名。")])])]),t._v(" "),a("li",[a("p",[t._v("服务运行级别")]),t._v(" "),a("ul",[a("li",[t._v("systemctl [start | stop] 服务名 一般在运行级别3和5执行，没有再作具体区分。")])])])]),t._v(" "),a("h4",{attrs:{id:"应用案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用案例"}},[t._v("#")]),t._v(" 应用案例")]),t._v(" "),a("p",[t._v("查看当前防火墙的状况，关闭防火墙和重启防火墙。")]),t._v(" "),a("ul",[a("li",[t._v("使用 ls -l /usr/lib/systemd/system 命令查看防火墙服务名为 firewalld.service。")]),t._v(" "),a("li",[t._v("systemctl status firewalld")]),t._v(" "),a("li",[t._v("systemctl stop firewalld")]),t._v(" "),a("li",[t._v("systemctl start firewalld")])]),t._v(" "),a("h4",{attrs:{id:"细节讨论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#细节讨论"}},[t._v("#")]),t._v(" 细节讨论")]),t._v(" "),a("ul",[a("li",[t._v("关闭或启用防火墙后，立即生效。")]),t._v(" "),a("li",[t._v("这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置。")]),t._v(" "),a("li",[t._v("如果设置某个服务自启动或关闭永久生效，要使用 systemctl [enable/disable] 服务名。")])]),t._v(" "),a("h2",{attrs:{id:"环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),a("p",[t._v("Linux是一个多用户的操作系统。多用户意味着每个用户登录系统后，都有自己专用的运行环境。而这个环境是由一组变量所定义,这组变量被称为环境变量。用户可以对自己的环境变量进行修改以达到对环境的要求。")]),t._v(" "),a("blockquote",[a("p",[t._v("环境变量顾名思义就是系统启动后整个运行环境的配置变量。记录了系统的一些基本信息包括可执行文件路径，用户，HOME路径，SHELL类型等等。通过env命令可以查看系统的当前所有环境变量。")])]),t._v(" "),a("p",[t._v("环境变量有三种：")]),t._v(" "),a("ul",[a("li",[t._v("全局环境变量")]),t._v(" "),a("li",[t._v("用户环境变量")]),t._v(" "),a("li",[t._v("临时环境变量")])]),t._v(" "),a("blockquote",[a("p",[t._v("全局环境变量放在/etc/profile中，这些环境变量对系统中的所有用户都有效;")]),t._v(" "),a("p",[t._v("用户环境变量放在用户的家目录下也就是./.bashrc (不同的shell会有不同的rc文件,zsh是.zshrc),这些环境变量对该用户有效;")]),t._v(" "),a("p",[t._v("临时环境变量是在shell上赋值输出的环境变量，只在当前shell有效。")])]),t._v(" "),a("h3",{attrs:{id:"全局环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局环境变量"}},[t._v("#")]),t._v(" 全局环境变量")]),t._v(" "),a("blockquote",[a("p",[t._v("对所有用户生效的永久性变量")])]),t._v(" "),a("p",[t._v("这类变量对系统内的所有用户都生效，所有用户都可以使用这类变量。作用范围是整个系统。")]),t._v(" "),a("p",[t._v("此文件只在root下才能修改。")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# vi /etc/profile\nexport CLASSPATH=./JAVA_HOME/lib:$JAVA_HOME/jre/lib\n")])])]),a("p",[t._v("添加完成后新的环境变量不会立即生效，立即生效需要运行 source /etc/profile ，否则只能在下次重进此用户时才能生效。")]),t._v(" "),a("h3",{attrs:{id:"用户环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户环境变量"}},[t._v("#")]),t._v(" 用户环境变量")]),t._v(" "),a("blockquote",[a("p",[t._v("对单一用户生效的永久性变量")])]),t._v(" "),a("p",[t._v("在用户目录下的.bash_profile 文件中添加变量，该文件是隐藏文件，可使用ll -a查看：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("whoami \nlouis\n\nvi /home/louis/.bash_profile\nexport CLASSPATH=./JAVA_HOME/lib:$JAVA_HOME/jre/lib \n\nsource /home/louis/.bash_profile\n")])])]),a("blockquote",[a("p",[t._v(".bashrc 和.bash_profile ，原则上讲设置此类环境变量时在这两个文件任意一个里面添加都是可以的，这两个文件的区别为：.bash_profile是交互式login方式进入bash shell运行，.bashrc是交互式non-login方式进入bash shell运行。")]),t._v(" "),a("p",[t._v("可以理解为.bash_profile文件只会在用户登录的时候读取一次，而.bashrc在每次打开终端进行一次新的会话时都会读取。")])]),t._v(" "),a("h3",{attrs:{id:"临时环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#临时环境变量"}},[t._v("#")]),t._v(" 临时环境变量")]),t._v(" "),a("p",[t._v("临时有效的环境变量(只针对当前shell有效)")]),t._v(" "),a("p",[t._v("此类环境变量只对当前的shell有效。当我们退出登录或者关闭终端再重新打开时，这个环境变量就会消失。是临时的。")]),t._v(" "),a("p",[t._v("设置方法：命令行下直接使用[export 变量名=变量值] 定义变量。")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('export NAME="louisyoungx"\necho $NAME\nlouisyoungx\n')])])]),a("p",[t._v("设置环境变量常用命令")]),t._v(" "),a("ul",[a("li",[t._v("echo 用于打印显示环境变量，如：echo $NAME；")]),t._v(" "),a("li",[t._v("export 用于设置新的环境变量，如：export NAME='louis'；")])]),t._v(" "),a("p",[t._v("更新环境变量 更新环境变量直接重新赋值即可：NAME='test' （注意：变量名前不需要加$）；")]),t._v(" "),a("ul",[a("li",[t._v("env 显示当前用户的变量；")]),t._v(" "),a("li",[t._v("set 显示当前shell变量，shell变量包含用户变量；")]),t._v(" "),a("li",[t._v("unset 删除一个环境变量，如：unset NAME；")]),t._v(" "),a("li",[t._v("readonly 设置环境变量只读，如：readonly NAME ，只读变量unset无效。")])]),t._v(" "),a("h2",{attrs:{id:"ssh配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssh配置文件"}},[t._v("#")]),t._v(" ssh配置文件")]),t._v(" "),a("p",[t._v("SSH config是Linux系统下针对SSH客户端的一个参数配置方案，可以将一些关于SSH命令的参数放到配置文件中去，执行ssh命令的时候从文件中读取，简化命令行的操作。这篇短博客记录ssh config相关的配置问题和使用方法。")]),t._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("SSH 参数配置有3个层次：")]),t._v(" "),a("ol",[a("li",[t._v("命令行参数，如"),a("code",[t._v("-p 10086")]),t._v(", "),a("code",[t._v("-i /path/to/identity_file")]),t._v(" 等选项来设置SSH的端口号或认证证书位置")]),t._v(" "),a("li",[t._v("针对某个用户的配置文件，所在路径为"),a("code",[t._v("~/.ssh/config")]),t._v("，默认是不存在的，需要手动创建")]),t._v(" "),a("li",[t._v("针对系统所有用户的配置文件，，所在路径为"),a("code",[t._v("/etc/ssh/ssh_config")]),t._v("\n参数重要性的顺序也是1>2>3，即越近的配置重要性越高。这里主要讲述第2种情况下的配置方式，即针对"),a("code",[t._v("~/.ssh/config")]),t._v("文件的写法进行说明。")])]),t._v(" "),a("p",[t._v("一个示例的文件如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configuration 1")]),t._v("\nHost cluster\n\tHostName "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".11.11\n\tUser tom\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configuration 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("aliyun\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Hostname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("202.44")]),t._v(".2.2\n\tUser tom\n")])])]),a("h3",{attrs:{id:"主要的规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要的规则"}},[t._v("#")]),t._v(" 主要的规则")]),t._v(" "),a("ol",[a("li",[t._v("每项配置都是"),a("code",[t._v("参数名 参数值")]),t._v("或"),a("code",[t._v("参数值=参数名")]),t._v("的形式，其中参数名不区分大小写，而参数值区分大小写，如上面的参数名"),a("code",[t._v("HostName")]),t._v("和"),a("code",[t._v("Hostname")]),t._v("是同一个参数")]),t._v(" "),a("li",[t._v("不同主机的配置通过"),a("code",[t._v("Host")]),t._v("参数来区分，一个配置文件里面可以有针对多个Host的配置")]),t._v(" "),a("li",[t._v("以"),a("code",[t._v("#")]),t._v("开头的是注释，会被忽略")]),t._v(" "),a("li",[t._v("同一个Host的配置内部，"),a("code",[t._v("参数名 参数值")]),t._v("和"),a("code",[t._v("参数值=参数名")]),t._v("的形式可以混用，如上例#2配置所示\n下面详细展开常见的参数类型。")])]),t._v(" "),a("h3",{attrs:{id:"常见参数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见参数类型"}},[t._v("#")]),t._v(" 常见参数类型")]),t._v(" "),a("h4",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[t._v("#")]),t._v(" Host")]),t._v(" "),a("p",[t._v("类似昵称，用于标识某个特定的配置，在ssh命令中使用，例如我们想要ssh连接到上例中的#1配置的主机，则在命令行执行如下命令即可：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ssh cluster\n")])])]),a("h4",{attrs:{id:"hostname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hostname"}},[t._v("#")]),t._v(" HostName")]),t._v(" "),a("p",[t._v("需要ssh连接过去的主机名，一般是IP地址，也可以用"),a("code",[t._v("%h")]),t._v("来替代命令行参数，这种情况由于我用的不多，所以没有深入了解，具体情况可以参考参考链接。")]),t._v(" "),a("h4",{attrs:{id:"user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[t._v("#")]),t._v(" User")]),t._v(" "),a("p",[t._v("登录主机的用户名")]),t._v(" "),a("h4",{attrs:{id:"identityfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identityfile"}},[t._v("#")]),t._v(" IdentityFile")]),t._v(" "),a("p",[t._v("认证证书文件，默认位置是"),a("code",[t._v("~/.ssh/id_rsa")]),t._v(", "),a("code",[t._v("~/ssh/id_dsa")]),t._v("等，如果采用默认的证书，可以不用设置此参数，除非你的证书放在某个自定义的目录，那么你就需要设置该参数来指向你的证书")]),t._v(" "),a("h4",{attrs:{id:"port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#port"}},[t._v("#")]),t._v(" Port")]),t._v(" "),a("p",[t._v("SSH访问主机的端口号，默认是22端口，同上，只有在非默认情况下才需要设置该值")]),t._v(" "),a("h4",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("p",[t._v("别的参数可以在命令行通过"),a("code",[t._v("man ssh_config")]),t._v("来查看")]),t._v(" "),a("h3",{attrs:{id:"利用ssh穿越跳板机配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用ssh穿越跳板机配置"}},[t._v("#")]),t._v(" 利用ssh穿越跳板机配置")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("Host jumper1    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表跳板机 1")]),t._v("\n    HostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("跳板机1的IP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssh 连接端口")]),t._v("\n    User username1    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跳板机 1 的用户名")]),t._v("\n\nHost jumper2    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表跳板机 2")]),t._v("\n    HostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("跳板机2的IP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssh 连接端口")]),t._v("\n    User username2    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跳板机 2 的用户名")]),t._v("\n    ProxyJump jumper1\n\nHost target    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表目标机器的名字")]),t._v("\n    HostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("目标机器IP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个是目标机器的 IP")]),t._v("\n    Port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目标机器 ssh 的端口")]),t._v("\n    User username_target    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目标机器的用户名")]),t._v("\n    ProxyJump jumper2\n")])])]),a("h3",{attrs:{id:"ssh隧道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssh隧道"}},[t._v("#")]),t._v(" ssh隧道")]),t._v(" "),a("h4",{attrs:{id:"frp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frp"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/fatedier/frp/blob/master/README_zh.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("frp")])]),t._v(" "),a("p",[t._v("frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。\nfrp 有以下特性：")]),t._v(" "),a("ul",[a("li",[t._v("frp 比 SSH 隧道功能更多，配置项更多；")]),t._v(" "),a("li",[t._v("frp 也需要一台外网服务器，并且需要在外网服务器上安装 frps，在本地开发机上安装 frpc；")])]),t._v(" "),a("h4",{attrs:{id:"ngrok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ngrok"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://ngrok.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("ngrok")])]),t._v(" "),a("p",[t._v("ngrok 是一个商用的内网穿透工具，它有以下特点：")]),t._v(" "),a("ul",[a("li",[t._v("不需要有外网服务器，因为 ngrok 会为你提供；")]),t._v(" "),a("li",[t._v("只需要在本地开发机安装 ngrok 客户端，和注册 ngrok 账户；")]),t._v(" "),a("li",[t._v("按照服务收费；")])]),t._v(" "),a("h2",{attrs:{id:"自定义开机自启程序-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义开机自启程序-脚本"}},[t._v("#")]),t._v(" 自定义开机自启程序/脚本")]),t._v(" "),a("p",[t._v("以一个"),a("code",[t._v("test.sh")]),t._v("脚本为例，目录"),a("code",[t._v("/usr/bin/test.sh")]),t._v("，内容为以下")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+%Y-%m-%d %H:%M:%S'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Example service started at '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DATE}")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("h3",{attrs:{id:"通过-crontab-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-crontab-实现"}},[t._v("#")]),t._v(" 通过 crontab 实现")]),t._v(" "),a("p",[t._v("Crontab 可以使用 @reboot 来执行主机启动之后的命令。首先在命令行输入：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("crontab -e\n")])])]),a("p",[t._v("然后添加以下内容：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@reboot /usr/bin/test.sh\n")])])]),a("p",[t._v("或者在启动完成后的指定时间内运行脚本")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 在启动 5 分钟后运行指定脚本\n@reboot sleep 300 &amp;&amp; /usr/bin/test.sh\n")])])]),a("p",[t._v("完成后，这个脚本就可以在重启的时候自动执行了。")]),t._v(" "),a("h3",{attrs:{id:"通过-systemd-service-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-systemd-service-实现"}},[t._v("#")]),t._v(" 通过 systemd service 实现")]),t._v(" "),a("ol",[a("li",[t._v("创建一个脚本或者使用可执行文件，使该脚本具有可执行权限：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/bin/test.sh\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("创建一个名为"),a("code",[t._v("testservice.service")]),t._v("的"),a("code",[t._v("Unit file")]),t._v("来定义一个"),a("code",[t._v("systemd")]),t._v("服务：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Description")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Example systemd service.\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("simple\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/bin/zsh ~/.local/bin/test.sh\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WantedBy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("multi-user.target\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("将上述"),a("code",[t._v("Unit")]),t._v("文件复制到/etc/systemd/system并为其授予权限：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" testservice.service /etc/systemd/system/testservice.service\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v(" /etc/systemd/system/testservice.service\n")])])]),a("blockquote",[a("p",[t._v("想要具体了解Unit文件的可用配置参数，可以查阅"),a("a",{attrs:{href:"https://www.freedesktop.org/wiki/Software/systemd/",target:"_blank",rel:"noopener noreferrer"}},[t._v("systemd")])])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("启动服务")])]),t._v(" "),a("p",[t._v("在命令行输入以下命令启动服务：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start testservice\n")])])]),a("p",[t._v("使用以下enable命令来确保该服务在系统启动时启动：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" testservice\n")])])]),a("p",[t._v("如果想要检查服务状态，使用：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status testservice\n")])])]),a("h2",{attrs:{id:"tmux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tmux"}},[t._v("#")]),t._v(" Tmux")]),t._v(" "),a("p",[t._v("在开始使用 tmux 之前我们需要先了解关于 tmux 的几个名词：")]),t._v(" "),a("p",[a("strong",[t._v("session, window , pane")]),t._v(" 在这里我们就把他们分别叫做会话，窗口，窗格 。")]),t._v(" "),a("blockquote",[a("p",[t._v("通常我们在终端中操作一个任务的时候，一旦终端关闭，任务也就结束了，被强制关闭了，在 tmux 中 使用 session 就可以解决这个问题，我们可以把当前操作的任务隐藏起来，在视觉上让它消失，任务继续执行着，当我们想返回任务做一些操作的时候，它可以很方便的回来，我们通常把上面的操作就做 session 操作，我们可以把 session 给隐藏起来，我们也可以把 session 给真的关掉。")]),t._v(" "),a("p",[t._v("在 tmux 中有一个窗口的概念，我们可以这样要去理解窗口：当前呈现在我们面前的这一个工作区域就是一个窗口（当前的终端界面），窗口可以被不断切割，切割成一个个小块，这一个个小块我们叫做窗格（pane）,这就是窗口和窗格的概念，我们把它想象成一块大蛋糕可以切成很多小块蛋糕，窗口可以被分割成很多小的窗格。")])]),t._v(" "),a("p",[t._v("tmux层级")]),t._v(" "),a("ul",[a("li",[t._v("session 1\n"),a("ul",[a("li",[t._v("window 1\n"),a("ul",[a("li",[t._v("subwindow 1")])])]),t._v(" "),a("li",[t._v("window 2")])])]),t._v(" "),a("li",[t._v("session 2\n"),a("ul",[a("li",[t._v("window 1\n"),a("ul",[a("li",[t._v("subwindow 1")]),t._v(" "),a("li",[t._v("subwindow 2")])])])])]),t._v(" "),a("li",[t._v("session 3")])]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# tmux的层次：\n-session1\n---window1\n------subwindow1\n------subwindow2\n------subwindow3\n------subwindow4\n---window2\n-session2\n---window3\n---window4\n")])])]),a("h3",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),a("h4",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("Tmux 一般需要自己安装。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ubuntu")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" tmux\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CentOS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" tmux\n")])])]),a("h4",{attrs:{id:"启动与退出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动与退出"}},[t._v("#")]),t._v(" 启动与退出")]),t._v(" "),a("p",[t._v("安装完成后，键入"),a("code",[t._v("tmux")]),t._v("命令，就进入了 Tmux 窗口。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux\n")])])]),a("p",[t._v("上面命令会启动 Tmux 窗口，底部有一个状态栏。状态栏的左侧是窗口信息（编号和名称），右侧是系统信息。")]),t._v(" "),a("p",[t._v("按下"),a("code",[t._v("Ctrl+d")]),t._v("或者显式输入"),a("code",[t._v("exit")]),t._v("命令，就可以退出 Tmux 窗口。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n")])])]),a("h4",{attrs:{id:"前缀键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前缀键"}},[t._v("#")]),t._v(" 前缀键")]),t._v(" "),a("blockquote",[a("p",[t._v("tmux默认的前缀操作都是 ctrl + b （类似screen的 ctrl + a）需要提醒大家的是，所有的快捷键都是ctrl + b，按完松开，再去按下一个功能键，不是一下子全按上")])]),t._v(" "),a("p",[t._v("Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是"),a("code",[t._v("Ctrl+b")]),t._v("，即先按下"),a("code",[t._v("Ctrl+b")]),t._v("，快捷键才会生效。")]),t._v(" "),a("p",[t._v("举例来说，帮助命令的快捷键是"),a("code",[t._v("Ctrl+b ?")]),t._v("。它的用法是，在 Tmux 窗口中，先按下"),a("code",[t._v("Ctrl+b")]),t._v("，再按下"),a("code",[t._v("?")]),t._v("，就会显示帮助信息。")]),t._v(" "),a("p",[t._v("然后，按下 ESC 键或"),a("code",[t._v("q")]),t._v("键，就可以退出帮助。")]),t._v(" "),a("h3",{attrs:{id:"会话管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会话管理"}},[t._v("#")]),t._v(" 会话管理")]),t._v(" "),a("h4",{attrs:{id:"新建会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建会话"}},[t._v("#")]),t._v(" 新建会话")]),t._v(" "),a("p",[t._v("第一个启动的 Tmux 窗口，编号是"),a("code",[t._v("0")]),t._v("，第二个窗口的编号是"),a("code",[t._v("1")]),t._v("，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。")]),t._v(" "),a("p",[t._v("使用编号区分会话，不太直观，更好的方法是为会话起名。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux new -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("session-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("上面命令新建一个指定名称的会话。")]),t._v(" "),a("h4",{attrs:{id:"分离会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分离会话"}},[t._v("#")]),t._v(" 分离会话")]),t._v(" "),a("p",[t._v("在 Tmux 窗口中，按下"),a("code",[t._v("Ctrl+b d")]),t._v("或者输入"),a("code",[t._v("tmux detach")]),t._v("命令，就会将当前会话与窗口分离。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux detach\n")])])]),a("p",[t._v("上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。")]),t._v(" "),a("p",[a("code",[t._v("tmux ls")]),t._v("命令可以查看当前所有的 Tmux 会话。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\ntmux list-session\n")])])]),a("h4",{attrs:{id:"接入会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接入会话"}},[t._v("#")]),t._v(" 接入会话")]),t._v(" "),a("p",[a("code",[t._v("tmux attach")]),t._v("命令用于重新接入某个已存在的会话。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用会话编号")]),t._v("\ntmux attach -t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用会话名称")]),t._v("\ntmux attach -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("session-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"杀死会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杀死会话"}},[t._v("#")]),t._v(" 杀死会话")]),t._v(" "),a("p",[a("code",[t._v("tmux kill-session")]),t._v("命令用于杀死某个会话。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用会话编号")]),t._v("\ntmux kill-session -t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用会话名称")]),t._v("\ntmux kill-session -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("session-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"切换会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换会话"}},[t._v("#")]),t._v(" 切换会话")]),t._v(" "),a("p",[a("code",[t._v("tmux switch")]),t._v("命令用于切换会话。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用会话编号")]),t._v("\ntmux switch -t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用会话名称")]),t._v("\ntmux switch -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("session-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"重命名会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名会话"}},[t._v("#")]),t._v(" 重命名会话")]),t._v(" "),a("p",[a("code",[t._v("tmux rename-session")]),t._v("命令用于重命名会话。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux rename-session -t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("上面命令将0号会话重命名。")]),t._v(" "),a("h4",{attrs:{id:"查看现有会话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看现有会话"}},[t._v("#")]),t._v(" 查看现有会话")]),t._v(" "),a("p",[a("code",[t._v("tmux ls")]),t._v("命令用于查看现有会话。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n")])])]),a("h4",{attrs:{id:"会话快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会话快捷键"}},[t._v("#")]),t._v(" 会话快捷键")]),t._v(" "),a("p",[t._v("下面是一些会话相关的快捷键。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Ctrl+b d")]),t._v("：分离当前会话。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b s")]),t._v("：列出所有会话。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b $")]),t._v("：重命名当前会话。")])]),t._v(" "),a("h3",{attrs:{id:"最简操作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最简操作流程"}},[t._v("#")]),t._v(" 最简操作流程")]),t._v(" "),a("p",[t._v("综上所述，以下是 Tmux 的最简操作流程。")]),t._v(" "),a("ol",[a("li",[t._v("新建会话"),a("code",[t._v("tmux new -s my_session")]),t._v("。")]),t._v(" "),a("li",[t._v("在 Tmux 窗口运行所需的程序。")]),t._v(" "),a("li",[t._v("按下快捷键"),a("code",[t._v("Ctrl+b d")]),t._v("将会话分离。")]),t._v(" "),a("li",[t._v("下次使用时，重新连接到会话"),a("code",[t._v("tmux attach-session -t my_session")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"窗格操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗格操作"}},[t._v("#")]),t._v(" 窗格操作")]),t._v(" "),a("p",[t._v("Tmux 可以将窗口分成多个窗格（pane），每个窗格运行不同的命令。以下命令都是在 Tmux 窗口中执行。")]),t._v(" "),a("h4",{attrs:{id:"划分窗格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#划分窗格"}},[t._v("#")]),t._v(" 划分窗格")]),t._v(" "),a("p",[a("code",[t._v("tmux split-window")]),t._v("命令用来划分窗格。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 划分上下两个窗格")]),t._v("\ntmux split-window\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 划分左右两个窗格")]),t._v("\ntmux split-window -h\n")])])]),a("h4",{attrs:{id:"移动光标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动光标"}},[t._v("#")]),t._v(" 移动光标")]),t._v(" "),a("p",[a("code",[t._v("tmux select-pane")]),t._v("命令用来移动光标位置。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标切换到上方窗格")]),t._v("\ntmux select-pane -U\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标切换到下方窗格")]),t._v("\ntmux select-pane -D\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标切换到左边窗格")]),t._v("\ntmux select-pane -L\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标切换到右边窗格")]),t._v("\ntmux select-pane -R\n")])])]),a("h4",{attrs:{id:"交换窗格位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交换窗格位置"}},[t._v("#")]),t._v(" 交换窗格位置")]),t._v(" "),a("p",[a("code",[t._v("tmux swap-pane")]),t._v("命令用来交换窗格位置。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前窗格上移")]),t._v("\ntmux swap-pane -U\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前窗格下移")]),t._v("\ntmux swap-pane -D\n")])])]),a("h4",{attrs:{id:"窗格快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗格快捷键"}},[t._v("#")]),t._v(" 窗格快捷键")]),t._v(" "),a("p",[t._v("下面是一些窗格操作的快捷键。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Ctrl+b %")]),t._v("：划分左右两个窗格。")]),t._v(" "),a("li",[a("code",[t._v('Ctrl+b "')]),t._v("：划分上下两个窗格。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b <arrow key>")]),t._v("：光标切换到其他窗格。"),a("code",[t._v("<arrow key>")]),t._v("是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键"),a("code",[t._v("↓")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b ;")]),t._v("：光标切换到上一个窗格。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b o")]),t._v("：光标切换到下一个窗格。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b {")]),t._v("：当前窗格与上一个窗格交换位置。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b }")]),t._v("：当前窗格与下一个窗格交换位置。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b Ctrl+o")]),t._v("：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b Alt+o")]),t._v("：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b x")]),t._v("：关闭当前窗格。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b !")]),t._v("：将当前窗格拆分为一个独立窗口。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b z")]),t._v("：当前窗格全屏显示，再使用一次会变回原来大小。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b Ctrl+<arrow key>")]),t._v("：按箭头方向调整窗格大小。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b q")]),t._v("：显示窗格编号。")])]),t._v(" "),a("h3",{attrs:{id:"窗口管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口管理"}},[t._v("#")]),t._v(" 窗口管理")]),t._v(" "),a("p",[t._v("除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口。")]),t._v(" "),a("h4",{attrs:{id:"新建窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建窗口"}},[t._v("#")]),t._v(" 新建窗口")]),t._v(" "),a("p",[a("code",[t._v("tmux new-window")]),t._v("命令用来创建新窗口。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux new-window\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个指定名称的窗口")]),t._v("\ntmux new-window -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("window-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"切换窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换窗口"}},[t._v("#")]),t._v(" 切换窗口")]),t._v(" "),a("p",[a("code",[t._v("tmux select-window")]),t._v("命令用来切换窗口。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到指定编号的窗口")]),t._v("\ntmux select-window -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("window-number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到指定名称的窗口")]),t._v("\ntmux select-window -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("window-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"重命名窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名窗口"}},[t._v("#")]),t._v(" 重命名窗口")]),t._v(" "),a("p",[a("code",[t._v("tmux rename-window")]),t._v("命令用于为当前窗口起名（或重命名）。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("tmux rename-window "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"窗口快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口快捷键"}},[t._v("#")]),t._v(" 窗口快捷键")]),t._v(" "),a("p",[t._v("下面是一些窗口操作的快捷键。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Ctrl+b c")]),t._v("：创建一个新窗口，状态栏会显示多个窗口的信息。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b p")]),t._v("：切换到上一个窗口（按照状态栏上的顺序）。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b n")]),t._v("：切换到下一个窗口。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b <number>")]),t._v("：切换到指定编号的窗口，其中的"),a("code",[t._v("<number>")]),t._v("是状态栏上的窗口编号。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b w")]),t._v("：从列表中选择窗口。")]),t._v(" "),a("li",[a("code",[t._v("Ctrl+b ,")]),t._v("：窗口重命名。")])]),t._v(" "),a("h3",{attrs:{id:"其他命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他命令"}},[t._v("#")]),t._v(" 其他命令")]),t._v(" "),a("p",[t._v("下面是一些其他命令。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有快捷键，及其对应的 Tmux 命令")]),t._v("\ntmux list-keys\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有 Tmux 命令及其参数")]),t._v("\ntmux list-commands\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出当前所有 Tmux 会话的信息")]),t._v("\ntmux info\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新加载当前的 Tmux 配置")]),t._v("\ntmux source-file ~/.tmux.conf\n")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);