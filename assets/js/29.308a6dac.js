(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{589:function(s,a,t){"use strict";t.r(a);var e=t(55),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("自定义vimrc与常用插件，vscode vim，网络配置，awk语言详解，shell脚本入⻔")]),s._v(" "),t("h2",{attrs:{id:"自定义vimrc配置与vim常用开发插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义vimrc配置与vim常用开发插件"}},[s._v("#")]),s._v(" 自定义vimrc配置与vim常用开发插件")]),s._v(" "),t("ol",[t("li",[s._v("编辑器设置")]),s._v(" "),t("li",[s._v("界面设置")]),s._v(" "),t("li",[s._v("恢复光标位置")]),s._v(" "),t("li",[s._v("基本的映射")]),s._v(" "),t("li",[s._v("Vim-Plug 插件\n需要在命令行执行以下命令安装vim-plug")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fLo ~/.vim/autoload/plug.vim --create-dirs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n")])])]),t("ol",{attrs:{start:"7"}},[t("li",[s._v("插件环境")])]),s._v(" "),t("h2",{attrs:{id:"vscode-vim插件配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-vim插件配置"}},[s._v("#")]),s._v(" vscode vim插件配置")]),s._v(" "),t("ol",[t("li",[s._v("安装vim插件")]),s._v(" "),t("li",[s._v("配置vimrc地址")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.vim/vimrc\n")])])]),t("ol",[t("li",[s._v("配置settings.json")])]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.useSystemClipboard"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.cursorStylePerMode.insert"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.cursorStylePerMode.normal"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"underline"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.cursorStylePerMode.replace"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"block-outline"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.cursorStylePerMode.visual"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.cursorStylePerMode.visualline"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.cursorStylePerMode.visualblock"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.handleKeys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<D-c>"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<shift-alt>"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),t("h2",{attrs:{id:"网络配置-网络属性-网络状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络配置-网络属性-网络状态"}},[s._v("#")]),s._v(" 网络配置（网络属性/网络状态）")]),s._v(" "),t("h3",{attrs:{id:"查看网络配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看网络配置"}},[s._v("#")]),s._v(" 查看网络配置")]),s._v(" "),t("ul",[t("li",[s._v("Windows 系统：ipconfig")]),s._v(" "),t("li",[s._v("Linux 系统：ip / ifconfig")])]),s._v(" "),t("h3",{attrs:{id:"linux-网络环境配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-网络环境配置"}},[s._v("#")]),s._v(" Linux 网络环境配置")]),s._v(" "),t("h4",{attrs:{id:"自动获取-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动获取-ip"}},[s._v("#")]),s._v(" 自动获取 IP")]),s._v(" "),t("p",[s._v("用户登录后，通过界面来设置自动获取 IP。")]),s._v(" "),t("p",[s._v("缺点: Linux 启动后，每次自动获取的 IP 地址可能不一样。这个不适用于服务器，因为服务器 IP 是需要固定的。")]),s._v(" "),t("h4",{attrs:{id:"固定-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#固定-ip"}},[s._v("#")]),s._v(" 固定 IP")]),s._v(" "),t("p",[s._v("通过修改配置文件来指定 IP")]),s._v(" "),t("p",[s._v("配置文件根据网卡不同名字有所区别，但文件路径一致：/etc/sysconfig/network-scripts/，常见的配置文件名有\nifcfg-eth0 或者 ifcfg-ens33，可以通过 ifconfig 查看后缀。")]),s._v(" "),t("p",[s._v("以 ifcfg-ens33 为例，配置文件需要修改的内容如后面的代码块所示。")]),s._v(" "),t("p",[s._v("修改后，重启网络服务或者重启系统生效：service network restart 或者 reboot")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BOOTPROTO")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("static "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 静态 IP")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("IPADDR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".59.134 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本机 IP 地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NETMASK")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 子网掩码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GATEWAY")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".59.2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认网关")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DNS1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.8")]),s._v(".8.8 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 域名解析器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DNS2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.8")]),s._v(".4.4\n")])])]),t("h3",{attrs:{id:"设置主机名和-hosts-映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置主机名和-hosts-映射"}},[s._v("#")]),s._v(" 设置主机名和 hosts 映射")]),s._v(" "),t("h4",{attrs:{id:"设置主机名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置主机名"}},[s._v("#")]),s._v(" 设置主机名")]),s._v(" "),t("ul",[t("li",[s._v("为了方便记忆，可以给 Linux 系统主机设置主机名，也可以根据需要修改主机名（大数据用到）。")]),s._v(" "),t("li",[s._v("使用 hostname 查看当前主机名")]),s._v(" "),t("li",[s._v("如需修改在文件 /etc/hostname 编辑即可")]),s._v(" "),t("li",[s._v("修改后，重启系统生效")])]),s._v(" "),t("h4",{attrs:{id:"设置-hosts-映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置-hosts-映射"}},[s._v("#")]),s._v(" 设置 hosts 映射")]),s._v(" "),t("p",[s._v("hosts 映射可以使主机名和系统 IP 地址建立映射联系，即通过主机名就可以连接到某个主机系统，省去了 IP 地址的麻烦。"),t("br"),s._v("\nhosts 是一个文本文件，用来记录 IP 和 Hostname（主机名）的映射关系。"),t("br"),s._v("\n除去 hosts 文件，DNS 是互联网上作为域名和 IP 地址相互映射的一个分布式数据库。Domain Name System\n的缩写，翻译过来就是域名系统。")]),s._v(" "),t("p",[t("em",[s._v("Windows")]),s._v(" ：在 C:\\Windows\\System32\\drivers\\etc\\hosts\n文件中指定即可。如192.168.130.23 Windows-PC")]),s._v(" "),t("p",[t("em",[s._v("Linux")]),s._v(" ：在 /etc/hosts 文件中指定即可。如192.168.100.13 CentOS-PC")]),s._v(" "),t("h2",{attrs:{id:"awk语言详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#awk语言详解"}},[s._v("#")]),s._v(" awk语言详解")]),s._v(" "),t("p",[s._v("awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。")]),s._v(" "),t("p",[s._v("awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。")]),s._v(" "),t("p",[s._v("awk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。")]),s._v(" "),t("h3",{attrs:{id:"使用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[s._v("#")]),s._v(" 使用方法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{pattern + action}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("filenames"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。")]),s._v(" "),t("blockquote",[t("p",[s._v("awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。")])]),s._v(" "),t("p",[s._v("通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。")]),s._v(" "),t("h3",{attrs:{id:"调用awk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调用awk"}},[s._v("#")]),s._v(" 调用awk")]),s._v(" "),t("p",[s._v("有三种方式调用awk")]),s._v(" "),t("p",[s._v("1.命令行方式\nawk [-F field-separator] 'commands' input-file(s)\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。")]),s._v(" "),t("p",[s._v("2.shell脚本方式\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n相当于shell脚本首行的：#!/bin/sh\n可以换成：#!/bin/awk")]),s._v(" "),t("p",[s._v("3.将所有的awk命令插入一个单独文件，然后调用：\nawk -f awk-script-file input-file(s)\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。")]),s._v(" "),t("p",[s._v("本章重点介绍命令行方式。")]),s._v(" "),t("h3",{attrs:{id:"入门实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#入门实例"}},[s._v("#")]),s._v(" 入门实例")]),s._v(" "),t("p",[s._v("假设last -n 5的输出如下")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("last -n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 仅取出前五行\nroot     pts/1  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.100 Tue Feb "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":21  still logged "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\nroot     pts/1  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.100 Tue Feb "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 00:46 - 02:28 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("01:41"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nroot     pts/1  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.100 Mon Feb "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":41 - "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":30 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("06:48"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndmtsai   pts/1  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.100 Mon Feb "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":41 - "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":41 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:00"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nroot     tty1                   Fri Sep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":09 - "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":10 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:01"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("如果只是显示最近登录的5个帐号")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("last -n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("\nroot\nroot\nroot\ndmtsai\nroot\n")])])]),t("p",[s._v("awk工作流程是这样的：读入有’n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，"),t("code",[s._v("$0")]),s._v("则表示所有域,"),t("code",[s._v("$1")]),s._v("表示第一个域,"),t("code",[s._v("$n")]),s._v("表示第n个域。默认域分隔符是”空白键” 或 “键”,所以"),t("code",[s._v("$1")]),s._v("表示登录用户，"),t("code",[s._v("$3")]),s._v("表示登录用户ip,以此类推。")]),s._v(" "),t("p",[s._v("如果只是显示/etc/passwd的账户")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("  -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("  \nroot\ndaemon\nbin\nsys\n")])])]),t("p",[s._v("这种是"),t("code",[s._v("awk+action")]),s._v("的示例，每行都会执行"),t("code",[s._v("action{print $1}")]),s._v("。")]),s._v(" "),t("p",[t("code",[s._v("-F")]),s._v("指定域分隔符为"),t("code",[s._v(":")]),s._v("。")]),s._v(" "),t("p",[s._v("如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("  -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1\"t\"$7}'")]),s._v("\nroot    /bin/bash\ndaemon  /bin/sh\nbin     /bin/sh\nsys     /bin/sh\n")])])]),t("p",[s._v("如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加”blue,/bin/nosh”。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("  -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN {print "name,shell"}  {print $1","$7} END {print "blue,/bin/nosh"}\'')]),s._v("\nname,shell\nroot,/bin/bash\ndaemon,/bin/sh\nbin,/bin/sh\nsys,/bin/sh\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\nblue,/bin/nosh\n")])])]),t("p",[s._v("awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，"),t("code",[s._v("$0")]),s._v("则表示所有域,"),t("code",[s._v("$1")]),s._v("表示第一个域,"),t("code",[s._v("$n")]),s._v("表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。")]),s._v(" "),t("p",[s._v("搜索/etc/passwd有root关键字的所有行")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/root/'")]),s._v(" /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n")])])]),t("p",[s._v("这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。")]),s._v(" "),t("p",[s._v("搜索支持正则，例如找root开头的: awk -F: ‘/^root/’ /etc/passwd")]),s._v(" "),t("p",[s._v("搜索/etc/passwd有root关键字的所有行，并显示对应的shell")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/root/{print $7}'")]),s._v(" /etc/passwd            \n/bin/bash\n")])])]),t("p",[s._v("这里指定了"),t("code",[s._v("action{print $7}")])]),s._v(" "),t("h3",{attrs:{id:"awk内置变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#awk内置变量"}},[s._v("#")]),s._v(" awk内置变量")]),s._v(" "),t("p",[s._v("awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。")]),s._v(" "),t("blockquote",[t("p",[s._v("ARGC 命令行参数个数\nARGV 命令行参数排列\nENVIRON 支持队列中系统环境变量的使用\nFILENAME awk浏览的文件名\nFNR 浏览文件的记录数\nFS 设置输入域分隔符，等价于命令行 -F选项\nNF 浏览记录的域的个数\nNR 已读的记录数\nOFS 输出域分隔符\nORS 输出记录分隔符\nRS 控制记录分隔符")])]),s._v(" "),t("p",[s._v("此外,"),t("code",[s._v("$0")]),s._v("变量是指整条记录。"),t("code",[s._v("$1")]),s._v("表示当前行的第一个域,"),t("code",[s._v("$2")]),s._v("表示当前行的第二个域,……以此类推")]),s._v(" "),t("p",[s._v("统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("  -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{print "filename:" FILENAME ",linenumber:" NR ",columns:" NF ",linecontent:"$0}\'')]),s._v(" /etc/passwd\nfilename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash\nfilename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh\nfilename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh\nfilename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh\n")])])]),t("p",[s._v("使用printf替代print,可以让代码更加简洁，易读")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("  -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{printf(\"filename:%10s,linenumber:%s,columns:%s,linecontent:%sn\",FILENAME,NR,NF,$0)}'")]),s._v("/etc/passwd\n")])])]),t("h3",{attrs:{id:"print和printf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#print和printf"}},[s._v("#")]),s._v(" print和printf")]),s._v(" "),t("p",[s._v("awk中同时提供了print和printf两种打印输出的函数。")]),s._v(" "),t("p",[s._v("其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。")]),s._v(" "),t("p",[s._v("printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。")]),s._v(" "),t("h3",{attrs:{id:"awk编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#awk编程"}},[s._v("#")]),s._v(" awk编程")]),s._v(" "),t("h4",{attrs:{id:"变量和赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量和赋值"}},[s._v("#")]),s._v(" 变量和赋值")]),s._v(" "),t("p",[s._v("除了awk的内置变量，awk还可以自定义变量。")]),s._v(" "),t("p",[s._v("下面统计/etc/passwd的账户人数")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{count++;print $0;} END{print \"user count is \", count}'")]),s._v(" /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\nuser count is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v("\n")])])]),t("p",[s._v("count是自定义变量。之前的action{}里都是只有一个print,其实print只是一个语句，而action{}可以有多个语句，以;号隔开。")]),s._v(" "),t("p",[s._v("这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN {count=0;print "[start]user count is ", count} {count=count+1;print $0;} END{print "[end]user count is ", count}\'')]),s._v(" /etc/passwd\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("user count is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nroot:x:0:0:root:/root:/bin/bash\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("user count is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v("\n")])])]),t("p",[s._v("统计某个文件夹下的文件占用的字节数")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN {size=0;} {size=size+$5;} END{print \"[end]size is \", size}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("size is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8657198")]),s._v("\n")])])]),t("p",[s._v("如果以M为单位显示:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN {size=0;} {size=size+$5;} END{print "[end]size is ", size/1024/1024,"M"}\'')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("size is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.25889")]),s._v(" M\n")])])]),t("p",[s._v("注意，统计不包括文件夹的子目录。")]),s._v(" "),t("h4",{attrs:{id:"条件语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件语句"}},[s._v("#")]),s._v(" 条件语句")]),s._v(" "),t("p",[s._v("awk中的条件语句是从C语言中借鉴来的，见如下声明方式：")]),s._v(" "),t("div",{staticClass:"language-C++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("if (expression) {\n statement;\n statement;\n ... ...\n}\n \nif (expression) {\n statement;\n} else {\n statement2;\n}\n \nif (expression) {\n statement1;\n} else if (expression1) {\n statement2;\n} else {\n statement3;\n}\n")])])]),t("p",[s._v("统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN {size=0;print "[start]size is ", size} {if($5!=4096){size=size+$5;}} END{print "[end]size is ", size/1024/1024,"M"}\'')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("size is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.22339")]),s._v(" M\n")])])]),t("h4",{attrs:{id:"循环语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[s._v("#")]),s._v(" 循环语句")]),s._v(" "),t("p",[s._v("awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。")]),s._v(" "),t("h4",{attrs:{id:"数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[s._v("#")]),s._v(" 数组")]),s._v(" "),t("p",[s._v("因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。")]),s._v(" "),t("p",[s._v("显示/etc/passwd的账户")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN {count=0;} {name[count] = $1;count++;}; END{for (i = 0; i '")]),s._v(" /etc/passwd\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" root\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" daemon\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" bin\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" sys\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" games\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])])]),t("p",[s._v("这里使用for循环遍历数组")]),s._v(" "),t("p",[s._v("awk编程的内容极多，这里只罗列简单常用的用法，更多请参考 "),t("a",{attrs:{href:"http://www.gnu.org/software/gawk/manual/gawk.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://www.gnu.org/software/gawk/manual/gawk.html")])]),s._v(" "),t("h2",{attrs:{id:"shell-编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-编程"}},[s._v("#")]),s._v(" Shell 编程")]),s._v(" "),t("p",[s._v("Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理。")]),s._v(" "),t("p",[s._v("对于 JavaEE 和 Python 程序员来说，工作的需要，会要求你编写一些 Shell\n脚本进行程序或者是服务器的维护，比如编写一个定时备份数据库的脚本。")]),s._v(" "),t("p",[s._v("对于大数据程序员来说，需要编写 Shell 程序来管理集群。")]),s._v(" "),t("h3",{attrs:{id:"shell-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-是什么"}},[s._v("#")]),s._v(" Shell 是什么")]),s._v(" "),t("p",[s._v("Shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发送请求以便运行程序的界面系统级程序，用户可以用 Shell\n来启动、挂起、停止甚至是编写一些程序。")]),s._v(" "),t("h3",{attrs:{id:"shell-脚本的执行方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-脚本的执行方式"}},[s._v("#")]),s._v(" Shell 脚本的执行方式")]),s._v(" "),t("p",[s._v("脚本格式要求")]),s._v(" "),t("ul",[t("li",[s._v("脚本以"),t("code",[s._v("#!/bin/bash")]),s._v(" 开头")]),s._v(" "),t("li",[s._v("脚本需要有可执行权限")])]),s._v(" "),t("p",[s._v("脚本的常用执行方式")]),s._v(" "),t("ul",[t("li",[s._v("给要执行的脚本文件，添加可执行权限")]),s._v(" "),t("li",[s._v("直接用 sh 脚本文件名 命令执行，不用赋予脚本可执行权限")])]),s._v(" "),t("h3",{attrs:{id:"shell-变量介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-变量介绍"}},[s._v("#")]),s._v(" Shell 变量介绍")]),s._v(" "),t("p",[s._v("Linux 中 Shell 的变量分为系统变量和用户自定义变量。")]),s._v(" "),t("p",[s._v("系统变量："),t("code",[s._v("$HOME")]),s._v("、"),t("code",[s._v("$PWD")]),s._v("、"),t("code",[s._v("$SHELL")]),s._v("、"),t("code",[s._v("$USER")]),s._v(" 等等，比如："),t("code",[s._v("echo $HOME")]),s._v(" 等等。")]),s._v(" "),t("p",[s._v("显示当前 Shell 中所有变量：set")]),s._v(" "),t("h3",{attrs:{id:"shell-变量定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-变量定义"}},[s._v("#")]),s._v(" Shell 变量定义")]),s._v(" "),t("p",[s._v("定义变量：变量=值 （注意等号两侧没有空格）")]),s._v(" "),t("p",[s._v("撤销变量：unset 变量")]),s._v(" "),t("p",[s._v("声明静态变量：readonly 变量。注意：该变量不能 unset")]),s._v(" "),t("h3",{attrs:{id:"定义变量的规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义变量的规则"}},[s._v("#")]),s._v(" 定义变量的规则")]),s._v(" "),t("p",[s._v("变量名称可以由字母、数字和下划线组成，但是不能以数字开头。")]),s._v(" "),t("p",[s._v("等号两侧不能有空格")]),s._v(" "),t("p",[s._v("变量名称一般习惯为大写，这是一个规范，遵守即可")]),s._v(" "),t("h3",{attrs:{id:"将命令的返回值赋给变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将命令的返回值赋给变量"}},[s._v("#")]),s._v(" 将命令的返回值赋给变量")]),s._v(" "),t("ol",[t("li",[s._v("通过反引号，运行里面的命令，并把结果返回给变量 A")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("通过"),t("code",[s._v("$(命令)")]),s._v("，运行里面的命令")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("h3",{attrs:{id:"shell-变量快速入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-变量快速入门"}},[s._v("#")]),s._v(" Shell 变量快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例1：定义变量 A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输出变量需要加上$")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例2：撤销变量 A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" A\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例3：声明静态的变量 B=2，不能 unset")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$B")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#执行 unset B 命令，会报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例 4：将指令返回的结果赋给变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("C")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$C")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$D")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"设置环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置环境变量"}},[s._v("#")]),s._v(" 设置环境变量")]),s._v(" "),t("h4",{attrs:{id:"基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("export 变量名=变量值")]),s._v("：将 Shell 变量输出为环境变量")]),s._v(" "),t("li",[t("code",[s._v("source 配置文件")]),s._v("：让修改后的配置文件立即生效")]),s._v(" "),t("li",[t("code",[s._v("echo $变量名")]),s._v("：查询环境变量的值")])]),s._v(" "),t("h4",{attrs:{id:"快速入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过编辑 /etc/profile 文件配置 JDK 环境变量，要增加以下命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/java/jdk1.8.0_261\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保存退出 /etc/profile 文件后，执行 source /etc/profile 命令使修改后的配置文件生效")]),s._v("\n")])])]),t("p",[s._v("Shell 脚本多行注释")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n需要注释的第一行内容\n需要注释的第二行内容\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])])]),t("h3",{attrs:{id:"位置参数变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#位置参数变量"}},[s._v("#")]),s._v(" 位置参数变量")]),s._v(" "),t("p",[s._v("当我们执行一个 Shell 脚本时，如果希望获取到命令行的参数信息，就可以使用到位置参数变量，比如 ./myshell.sh 100 200 ,\n这个就是一个执行 shell 的命令行，可以在 myshell 脚本中获取到参数信息。")]),s._v(" "),t("h4",{attrs:{id:"基本语法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-2"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("$n")]),s._v("："),t("code",[s._v("n")]),s._v(" 为数字，"),t("code",[s._v("$0")]),s._v(" 代表命令本身，"),t("code",[s._v("$1-$9")]),s._v(" 代表第一到第九个参数，十以上的参数需要用大括号，如"),t("code",[s._v("${10}")])]),s._v(" "),t("li",[t("code",[s._v("$*")]),s._v("：代表命令行中所有的参数，$*把所有的参数看成一个整体")]),s._v(" "),t("li",[t("code",[s._v("$@")]),s._v("：代表命令行中所有的参数，不过该命令是把每个参数区分对待")]),s._v(" "),t("li",[t("code",[s._v("$#")]),s._v("：代表命令行中所有参数的个数")])]),s._v(" "),t("h4",{attrs:{id:"快速入门-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-2"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(" 1="),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" 2="),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"命令行所有传入的参数='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数的个数='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"预定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预定义变量"}},[s._v("#")]),s._v(" 预定义变量")]),s._v(" "),t("p",[s._v("Shell 设计者事先已经定义好的变量，可以直接在 Shell 脚本中使用")]),s._v(" "),t("h4",{attrs:{id:"基本语法-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-3"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("$$")]),s._v("：当前进程的进程号")]),s._v(" "),t("li",[t("code",[s._v("$!")]),s._v("：后台运行的最后一个进程的进程号")]),s._v(" "),t("li",[t("code",[s._v("$?")]),s._v("：最后一次执行的命令的返回状态。如果这个变量的值为 0，证明上一个命令正确执行；如果这个变量的值为非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确")])]),s._v(" "),t("h4",{attrs:{id:"快速入门-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-3"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"当前进程号='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#后台方式运行 myShell.sh")]),s._v("\n./myShell.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"最后的的进程号='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"执行的值='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),t("p",[s._v("在 Shell 中进行各种运算操作。")]),s._v(" "),t("h4",{attrs:{id:"基本语法-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-4"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("$((运算式))\\")]),s._v("或"),t("code",[s._v("$[运算式]")])]),s._v(" "),t("li",[s._v("或 "),t("code",[s._v("expr m + n")]),s._v(" 注意 "),t("code",[s._v("expr")]),s._v(" 运算符间要有空格")]),s._v(" "),t("li",[s._v("expr "),t("code",[s._v("\\*")]),s._v("，"),t("code",[s._v("/")]),s._v("，"),t("code",[s._v("%")]),s._v(" 分别代表乘，除，取余")])]),s._v(" "),t("h4",{attrs:{id:"快速入门-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-4"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例1：计算（2+3）X4 的值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用第一种方式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RES1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"res1='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RES1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用第二种方式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RES2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("+3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("*4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"res2='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RES2")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用第三种方式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TEMP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RES3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $TEMP "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"temp='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TEMP")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"res3='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RES3")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"执行的值='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例2：请求出命令行的两个参数[整数]的和")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUM")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("+"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sum='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SUM")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"条件判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件判断"}},[s._v("#")]),s._v(" 条件判断")]),s._v(" "),t("h4",{attrs:{id:"判断语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#判断语句"}},[s._v("#")]),s._v(" 判断语句")]),s._v(" "),t("p",[s._v("[ condition ]（注意 condition 前后要有空格），非空返回 true，可使用$?验证（0 为 true，>1 为 false）")]),s._v(" "),t("h4",{attrs:{id:"常用判断条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用判断条件"}},[s._v("#")]),s._v(" 常用判断条件")]),s._v(" "),t("h5",{attrs:{id:"字符串比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串比较"}},[s._v("#")]),s._v(" 字符串比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("选项")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("=")]),s._v(" "),t("td",[s._v("字符串是否相等")])])])]),s._v(" "),t("h5",{attrs:{id:"两个整数的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两个整数的比较"}},[s._v("#")]),s._v(" 两个整数的比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("选项")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-lt")]),s._v(" "),t("td",[s._v("小于")])]),s._v(" "),t("tr",[t("td",[s._v("-le")]),s._v(" "),t("td",[s._v("小于等于")])]),s._v(" "),t("tr",[t("td",[s._v("-eq")]),s._v(" "),t("td",[s._v("等于")])]),s._v(" "),t("tr",[t("td",[s._v("-gt")]),s._v(" "),t("td",[s._v("大于")])]),s._v(" "),t("tr",[t("td",[s._v("-ge")]),s._v(" "),t("td",[s._v("大于等于")])]),s._v(" "),t("tr",[t("td",[s._v("-ne")]),s._v(" "),t("td",[s._v("不等于")])])])]),s._v(" "),t("h5",{attrs:{id:"按照文件权限进行判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按照文件权限进行判断"}},[s._v("#")]),s._v(" 按照文件权限进行判断")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("选项")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-r")]),s._v(" "),t("td",[s._v("有读的权限")])]),s._v(" "),t("tr",[t("td",[s._v("-w")]),s._v(" "),t("td",[s._v("有写的权限")])]),s._v(" "),t("tr",[t("td",[s._v("-x")]),s._v(" "),t("td",[s._v("有执行的权限")])])])]),s._v(" "),t("h5",{attrs:{id:"按照文件类型进行判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按照文件类型进行判断"}},[s._v("#")]),s._v(" 按照文件类型进行判断")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("选项")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-f")]),s._v(" "),t("td",[s._v("文件存在并且是一个常规的文件")])]),s._v(" "),t("tr",[t("td",[s._v("-e")]),s._v(" "),t("td",[s._v("文件存在")])]),s._v(" "),t("tr",[t("td",[s._v("-d")]),s._v(" "),t("td",[s._v("文件存在并是一个目录")])])])]),s._v(" "),t("h4",{attrs:{id:"快速入门-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-5"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例1：“ok”是否等于“ok”")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#判断语句：是否 =")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"equal"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例2：23是否大于等于22")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#判断语句：使用 -ge")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" -ge "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"大于"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例3：/root/shcode/aaa.txt 目录中的文件是否存在")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#判断语句：使用 -f")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /root/shcode/aaa.txt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"存在"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#其他案例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" edu "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, edu"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("h3",{attrs:{id:"if-判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-判断"}},[s._v("#")]),s._v(" if 判断")]),s._v(" "),t("h4",{attrs:{id:"基本语法-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-5"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("或者")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("h4",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("p",[s._v("[ 条件判断式 ]中括号和条件判断式之间必须有空格，if 与 [ 之间也有空格")]),s._v(" "),t("h4",{attrs:{id:"快速入门-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-6"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例：编写一个 Shell 程序，如果输入的参数，大于等于60，则输出“及格了”，如果小于60，则输出 “不及格”")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" -ge "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"及格了"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" -lt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"不及格"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("h3",{attrs:{id:"case-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case-语句"}},[s._v("#")]),s._v(" case 语句")]),s._v(" "),t("h4",{attrs:{id:"基本语法-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-6"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" $变量名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"值 1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      如果变量的值等于值 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，则执行程序 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"值 2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      如果变量的值等于值 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，则执行程序 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      省略其他分支\n*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      如果变量的值都不是以上的值，则执行此程序\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),t("h4",{attrs:{id:"快速入门-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-7"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例：当命令行参数是1时，输出“周一”，是2时，就输出“周二”，其它情况输出“other”")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"周一"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"周二"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"other"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),t("h3",{attrs:{id:"for-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-语句"}},[s._v("#")]),s._v(" for 语句")]),s._v(" "),t("h4",{attrs:{id:"for-in-基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-in-基本语法"}},[s._v("#")]),s._v(" for-in 基本语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 变量 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 值1 值2 值3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n      程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h4",{attrs:{id:"for-in-快速入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-in-快速入门"}},[s._v("#")]),s._v(" for-in 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例：打印命令行输入的参数【可以看出$*和$@的区别】")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意 $* 是把输入的参数，当作一个整体，所以只会输出一行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"num is '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用 $@ 是把输入的参数，分别对待，所以有几个参数，就会输出几行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("j")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"num is '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$j")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h4",{attrs:{id:"for-基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-基本语法"}},[s._v("#")]),s._v(" for 基本语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" 初始值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("循环控制条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("变量变化 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n      程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h4",{attrs:{id:"for-快速入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-快速入门"}},[s._v("#")]),s._v(" for 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例：从1加到100的值输出显示")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定义一个变量 SUM")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUM")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUM")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SUM")]),s._v("+i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"总和SUM='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SUM")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"while-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#while-语句"}},[s._v("#")]),s._v(" while 语句")]),s._v(" "),t("h4",{attrs:{id:"基本语法-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-7"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n          程序\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h4",{attrs:{id:"注意事项-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-2"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("p",[s._v("[ 条件判断式 ]中括号和条件判断式之间必须有空格，while 与 [ 之间也有空格")]),s._v(" "),t("h4",{attrs:{id:"快速入门-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-8"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例：从命令行输入一个数 n，统计从 1+...+ n 的值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUM")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" -le "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUM")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("+"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SUM")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("+1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"总和SUM='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SUM")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"read-读取控制台输入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#read-读取控制台输入"}},[s._v("#")]),s._v(" read 读取控制台输入")]),s._v(" "),t("h4",{attrs:{id:"基本语法-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-8"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("p",[s._v("read [选项] [参数]")]),s._v(" "),t("h4",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("-p")]),s._v("：指定读取值时的提示符；")]),s._v(" "),t("li",[t("code",[s._v("-t")]),s._v("：指定读取值时等待的时间（秒），如果没有在指定的时间内输入，就不再等待了。")])]),s._v(" "),t("h4",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[s._v("#")]),s._v(" 参数")]),s._v(" "),t("p",[s._v("变量：指定读取值的变量名")]),s._v(" "),t("h4",{attrs:{id:"快速入门-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-9"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例1：读取控制台输入一个 NUM1 值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入一个数NUM1="')]),s._v(" NUM1\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"您输入数NUM1='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUM1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例2：读取控制台输入一个 NUM2 值，在 10 秒内输入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -t "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入一个数NUM2="')]),s._v(" NUM2\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"您输入数NUM2='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUM2")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"系统函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统函数"}},[s._v("#")]),s._v(" 系统函数")]),s._v(" "),t("h4",{attrs:{id:"basename-基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basename-基本语法"}},[s._v("#")]),s._v(" basename 基本语法")]),s._v(" "),t("ul",[t("li",[s._v("basename [pathname] [suffix]：返回完整路径最后 / 的部分，常用于获取文件名。")]),s._v(" "),t("li",[s._v("basename [string] [suffix]：会删掉所有的前缀包括最后一个（‘/’）字符，然后将字符串显示出来。")])]),s._v(" "),t("p",[s._v("选项："),t("br"),s._v(" "),t("code",[s._v("suffix")]),s._v(" 为后缀，如果 "),t("code",[s._v("suffix")]),s._v(" 被指定了，"),t("code",[s._v("basename")]),s._v(" 会将 "),t("code",[s._v("pathname")]),s._v(" 或 "),t("code",[s._v("string")]),s._v(" 中的 "),t("code",[s._v("suffix")]),s._v(" 去掉。")]),s._v(" "),t("h4",{attrs:{id:"dirname-基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dirname-基本语法"}},[s._v("#")]),s._v(" dirname 基本语法")]),s._v(" "),t("h5",{attrs:{id:"功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[s._v("#")]),s._v(" 功能")]),s._v(" "),t("p",[s._v("返回完整路径最后 / 的前面的部分，常用于返回路径部分。")]),s._v(" "),t("p",[t("code",[s._v("dirname")]),s._v(" 文件绝对路径：从给定的包含绝对路径的文件名中去除文件名（非目录的部分），然后返回剩下的路径（目录的部分）。")]),s._v(" "),t("h5",{attrs:{id:"快速入门-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-10"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("p",[s._v("案例1：请返回 /home/aaa/test.txt 的 test.txt 部分")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" /home/aaa/test.txt\n")])])]),t("p",[s._v("案例2：请返回 /home/aaa/test.txt 的 /home/aaa 部分")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" /home/aaa/test.txt\n")])])]),t("h3",{attrs:{id:"自定义函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数"}},[s._v("#")]),s._v(" 自定义函数")]),s._v(" "),t("h4",{attrs:{id:"基本语法-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法-9"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" funname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      Action"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("return int"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("调用直接写函数名：funname [值]")]),s._v(" "),t("h4",{attrs:{id:"快速入门-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-11"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#案例1：计算输入两个参数的和（动态获取），getSum")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定义函数 getSum")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("getSum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUM")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUM1")]),s._v("+"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUM2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"和是='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SUM")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输入两个值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入一个数NUM1="')]),s._v(" NUM1\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入一个数NUM2="')]),s._v(" NUM2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#调用自定义函数")]),s._v("\ngetSum "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUM1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUM2")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);